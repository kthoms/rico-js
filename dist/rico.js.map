{"version":3,"sources":["webpack://ricojs/webpack/universalModuleDefinition","webpack://ricojs/webpack/bootstrap","webpack://ricojs/./node_modules/emitter-component/index.js","webpack://ricojs/./src/logging/constants.js","webpack://ricojs/./src/utils/index.js","webpack://ricojs/./src/logging/logger.js","webpack://ricojs/./src/logging/loggerfactory.js","webpack://ricojs/./src/logging/index.js","webpack://ricojs/./src/platform/client.js","webpack://ricojs/./src/platform/serviceProvider.js","webpack://ricojs/./src/platform/constants.js","webpack://ricojs/./src/http/httpResponse.js","webpack://ricojs/./src/http/httpException.js","webpack://ricojs/./src/http/executor.js","webpack://ricojs/./src/http/reponseBuilder.js","webpack://ricojs/./src/http/requestBuilder.js","webpack://ricojs/./src/http/httpClient.js","webpack://ricojs/./src/http/httpClientInterceptor.js","webpack://ricojs/./src/http/index.js","webpack://ricojs/./src/platform/clientScope.js","webpack://ricojs/./src/remoting/commands/commandConstants.js","webpack://ricojs/./src/remoting/commandBatcher.js","webpack://ricojs/./src/remoting/constants.js","webpack://ricojs/./src/remoting/commands/impl/valueChangedCommand.js","webpack://ricojs/./src/remoting/commands/impl/attributeMetadataChangedCommand.js","webpack://ricojs/./src/remoting/commands/impl/callActionCommand.js","webpack://ricojs/./src/remoting/commands/impl/changeAttributeMetadataCommand.js","webpack://ricojs/./src/remoting/commands/impl/createContextCommand.js","webpack://ricojs/./src/remoting/commands/impl/createControllerCommand.js","webpack://ricojs/./src/remoting/commands/impl/createPresentationModelCommand.js","webpack://ricojs/./src/remoting/commands/impl/deletePresentationModelCommand.js","webpack://ricojs/./src/remoting/commands/impl/destroyContextCommand.js","webpack://ricojs/./src/remoting/commands/impl/destroyControllerCommand.js","webpack://ricojs/./src/remoting/commands/impl/interruptLongPollCommand.js","webpack://ricojs/./src/remoting/commands/impl/presentationModelDeletedCommand.js","webpack://ricojs/./src/remoting/commands/impl/startLongPollCommand.js","webpack://ricojs/./src/remoting/commands/codecError.js","webpack://ricojs/./src/remoting/commands/codec.js","webpack://ricojs/./src/remoting/eventBus.js","webpack://ricojs/./src/remoting/clientPresentationModel.js","webpack://ricojs/./src/remoting/clientConnector.js","webpack://ricojs/./src/remoting/clientAttribute.js","webpack://ricojs/./src/remoting/clientDolphin.js","webpack://ricojs/./src/remoting/attribute.js","webpack://ricojs/./src/remoting/commands/commandFactory.js","webpack://ricojs/./src/remoting/clientModelStore.js","webpack://ricojs/./src/remoting/noTransmitter.js","webpack://ricojs/./src/remoting/dolphinBuilder.js","webpack://ricojs/./src/remoting/connector.js","webpack://ricojs/./src/remoting/beanManager.js","webpack://ricojs/./src/remoting/classRepository.js","webpack://ricojs/./src/remoting/controllerProxy.js","webpack://ricojs/./src/remoting/controllerManager.js","webpack://ricojs/./src/remoting/clientContext.js","webpack://ricojs/./src/remoting/errors.js","webpack://ricojs/./src/remoting/remotingErrorHandler.js","webpack://ricojs/./src/remoting/platformHttpTransmitter.js","webpack://ricojs/./src/remoting/clientContextFactory.js","webpack://ricojs/./src/remoting/index.js","webpack://ricojs/./src/security/keycloakConnection.js","webpack://ricojs/./src/security/keycloakFunctions.js","webpack://ricojs/./src/security/securityHttpClientInterceptor.js","webpack://ricojs/./src/security/keycloakSecurity.js","webpack://ricojs/./src/security/index.js","webpack://ricojs/./src/index.js"],"names":["LogLevel","NONE","name","text","level","ALL","TRACE","DEBUG","INFO","WARN","ERROR","_checkMethodName","exists","object","checkMethod","checkParam","param","parameterName","Error","parseUrl","url","pattern","matches","match","scheme","length","substring","path","query","hashes","split","reduce","params","hash","key","val","Object","assign","fragment","hostname","port","window","location","protocol","indexOf","parseInt","user","password","LOCALS","pad","size","result","internalLog","args","Array","from","arguments","func","shift","context","logLevel","date","Date","dateString","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","getCookie","document","cookie","value","parts","pop","Logger","rootLogger","cookieLogLevel","console","isLogLevel","log","warn","error","getLogLevel","levelName","ROOT_LOGGER","loggers","Map","LoggerFactory","existingLogger","get","logger","set","Client","LOGGER","getLogger","services","serviceProviders","configuration","getService","service","provider","hasService","getAllServiceTypes","forEach","serviceProvider","push","registerServiceProvider","getName","current","debug","init","trace","initServiceProvider","ServiceProvider","serviceClass","client","serviceInstance","RESPONSE_TYPE","ARRAY_BUFFER","TEXT","JSON","HTTP","METHOD","GET","POST","PUT","DELETE","STATUS","ACCEPTED","BAD_GATEWAY","BAD_REQUEST","CONFLICT","CONTINUE","CREATED","EXPECTATION_FAILED","FAILED_DEPENDENCY","FORBIDDEN","GATEWAY_TIMEOUT","GONE","HTTP_VERSION_NOT_SUPPORTED","IM_A_TEAPOT","INSUFFICIENT_SPACE_ON_RESOURCE","INSUFFICIENT_STORAGE","INTERNAL_SERVER_ERROR","LENGTH_REQUIRED","LOCKED","METHOD_FAILURE","METHOD_NOT_ALLOWED","MOVED_PERMANENTLY","MOVED_TEMPORARILY","MULTI_STATUS","MULTIPLE_CHOICES","NETWORK_AUTHENTICATION_REQUIRED","NO_CONTENT","NON_AUTHORITATIVE_INFORMATION","NOT_ACCEPTABLE","NOT_FOUND","NOT_IMPLEMENTED","NOT_MODIFIED","OK","PARTIAL_CONTENT","PAYMENT_REQUIRED","PERMANENT_REDIRECT","PRECONDITION_FAILED","PRECONDITION_REQUIRED","PROCESSING","PROXY_AUTHENTICATION_REQUIRED","REQUEST_HEADER_FIELDS_TOO_LARGE","REQUEST_TIMEOUT","REQUEST_TOO_LONG","REQUEST_URI_TOO_LONG","REQUESTED_RANGE_NOT_SATISFIABLE","RESET_CONTENT","SEE_OTHER","SERVICE_UNAVAILABLE","SWITCHING_PROTOCOLS","TEMPORARY_REDIRECT","TOO_MANY_REQUESTS","UNAUTHORIZED","UNPROCESSABLE_ENTITY","UNSUPPORTED_MEDIA_TYPE","USE_PROXY","HEADER_NAME","ACCEPT","ACCEPT_CHARSET","ACCEPT_ENCODING","ACCEPT_LANGUAGE","ACCEPT_DATETIME","AUTHORIZATION","CACHE_CONTROL","CONNECTION","COOKIE","CONTENT_LENGTH","CONTENT_MD5","CONTENT_TYPE","DATE","EXPECT","FORWARDED","FROM","HOST","IF_MATCH","IF_MODIFIED_SINCE","IF_NONE_MATCH","IF_RANGE","MAX_FORWARDS","PRAGMA","PROXY_AUTHORIZATION","REFERER","TE","USER_AGENT","X_CLIENT_ID","X_CLIENT_SESSION_ID","X_PLATFORM_SECURITY_REALM","X_PLATFORM_SECURITY_BEARER_ONLY","X_PLATFORM_SECURITY_APPLICATION","APPLICATION_JSON","APPLICATION_X_WWW_FORM_URLENCODED","TEXT_HTML","TEXT_PLAIN","XMLHTTPREQUEST_READYSTATE","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","DONE","SECURITY","AUTH_ENDPOINT","HttpResponse","status","content","headers","headerArray","trim","i","line","header","toLowerCase","join","HttpException","message","timedout","Executor","timeout","worker","httpWorker","useWorker","timeoutToUse","requestInterceptors","getRequestInterceptors","responseInterceptors","getResponseInterceptors","directCall","resolve","reject","self","httpRequest","XMLHttpRequest","async","open","method","withCredentials","requestInterceptor","handleRequest","setRequestHeader","responseType","ontimeout","statusText","httpException","onerror","onreadystatechange","readyState","httpResponse","response","getAllResponseHeaders","responseInterceptor","handleResponse","send","requestBody","bind","workerCall","collectedRequestHeaders","createWorker","onmessage","event","terminate","msg","data","responseHeaders","postMessage","conf","requestHeaders","Promise","ResponseBuilder","executor","RequestBuilder","reponseBuilder","headersInfo","hasOwnProperty","HttpClient","requestBuilder","request","HttpClientInterceptor","requestHandlers","Set","responseHandlers","handler","add","list","register","httpClientProvider","httpClientInterceptorProvider","ClientScope","clientIds","clientId","getClientId","newClientId","getHeaderByName","setClientId","addRequestInterceptor","addResponseInterceptor","calcKey","clientScopeProvider","ATTRIBUTE_METADATA_CHANGED_COMMAND_ID","CALL_ACTION_COMMAND_ID","CHANGE_ATTRIBUTE_METADATA_COMMAND_ID","CREATE_CONTEXT_COMMAND_ID","CREATE_CONTROLLER_COMMAND_ID","CREATE_PRESENTATION_MODEL_COMMAND_ID","DELETE_PRESENTATION_MODEL_COMMAND_ID","DESTROY_CONTEXT_COMMAND_ID","DESTROY_CONTROLLER_COMMAND_ID","INTERRUPT_LONG_POLL_COMMAND_ID","PRESENTATION_MODEL_DELETED_COMMAND_ID","START_LONG_POLL_COMMAND_ID","VALUE_CHANGED_COMMAND_ID","ID","ATTRIBUTE_ID","PM_ID","CONTROLLER_ID","PM_TYPE","NAME","VALUE","PARAMS","PM_ATTRIBUTES","BlindCommandBatcher","folding","maxBatchSize","queue","batch","batchLength","element","command","id","attributeId","newValue","splice","JS_STRING_TYPE","REMOTING_BEAN","BYTE","SHORT","INT","LONG","FLOAT","DOUBLE","BOOLEAN","STRING","ENUM","CALENDAR","LOCAL_DATE_FIELD_TYPE","LOCAL_DATE_TIME_FIELD_TYPE","ZONED_DATE_TIME_FIELD_TYPE","ADDED_TYPE","REMOVED_TYPE","ValueChangedCommand","AttributeMetadataChangedCommand","metadataName","CallActionCommand","controllerid","actionName","ChangeAttributeMetadataCommand","CreateContextCommand","CreateControllerCommand","controllerName","parentControllerId","CreatePresentationModelCommand","presentationModel","attributes","clientSideOnly","pmId","pmType","presentationModelType","getAttributes","attr","propertyName","getValue","DeletePresentationModelCommand","DestroyContextCommand","DestroyControllerCommand","controllerId","InterruptLongPollCommand","PresentationModelDeletedCommand","StartLongPollCommand","CodecError","Codec","jsonCommand","map","attribute","commands","stringify","_encodeAttributeMetadataChangedCommand","_encodeCallActionCommand","_encodeChangeAttributeMetadataCommand","_encodeCreateContextCommand","_encodeCreateControllerCommand","_encodeCreatePresentationModelCommand","_encodeDeletePresentationModelCommand","_encodeDestroyContextCommand","_encodeDestroyControllerCommand","_encodeInterruptLongPollCommand","_encodePresentationModelDeletedCommand","_encodeStartLongPollCommand","_encodeValueChangedCommand","transmitted","parse","_decodeAttributeMetadataChangedCommand","_decodeCallActionCommand","_decodeChangeAttributeMetadataCommand","_decodeCreateContextCommand","_decodeCreateControllerCommand","_decodeCreatePresentationModelCommand","_decodeDeletePresentationModelCommand","_decodeDestroyContextCommand","_decodeDestroyControllerCommand","_decodeInterruptLongPollCommand","_decodePresentationModelDeletedCommand","_decodeStartLongPollCommand","_decodeValueChangedCommand","EventBus","eventHandlers","eventHandler","handle","presentationModelInstanceCount","ClientPresentationModel","dirty","toString","invalidBus","dirtyValueChangeBus","attributeCopy","copy","addAttribute","findAttributeByPropertyName","getQualifier","findAttributeByQualifier","setPresentationModel","onValueChange","trigger","source","handleInvalidate","onEvent","slice","qualifier","sourcePresentationModel","targetAttribute","sourceAttribute","getAt","syncWith","ClientConnector","transmitter","clientDolphin","slackMS","commandQueue","currentlySending","pushEnabled","waiting","codec","commandBatcher","newBatcher","enabled","newListener","pushListener","newCommand","releaseCommand","onFinished","release","doSendNext","enqueuePushCommand","cmdsAndHandlers","callback","cah","transmit","touchedPMs","touched","setTimeout","onError","handleDeletePresentationModelCommand","handleCreatePresentationModelCommand","handleValueChangedCommand","handleAttributeMetadataChangedCommand","serverCommand","model","findPresentationModelById","getClientModelStore","deletePresentationModel","containsPresentationModel","clientAttribute","clientPm","addAttributes","updatePresentationModelQualifier","findAttributeById","setValueFromServer","me","onFinishedData","signal","ClientAttribute","clientAttributeInstanceCount","valueChangeBus","qualifierChangeBus","setValue","setQualifier","verifiedValue","checkValue","oldValue","newQualifier","oldQualifier","String","Boolean","Number","valueOf","ok","SUPPORTED_VALUE_TYPES","ClientDolphin","clientConnector","type","clientModelStore","listPresentationModelIds","listPresentationModels","findAllPresentationModelByType","modelToDelete","updateAttributeQualifier","findAllAttributesByQualifier","pushCommand","setPushListener","setReleaseCommand","setPushEnabled","listen","Attribute","QUALIFIER_PROPERTY","CommandFactory","ClientModelStore","presentationModels","presentationModelsPerType","attributesPerId","attributesPerQualifier","modelStoreChangeBus","addAttributeById","addAttributeByQualifier","evt","sendToServer","createValueChangedCommand","getClientConnector","attrs","findAttributesByFilter","onQualifierChange","createChangeAttributeMetadataCommand","has","added","addPresentationModelByType","connector","createCreatePresentationModelCommand","registerAttribute","removed","removePresentationModelByType","delete","removeAttributeById","removeAttributeByQualifier","filter","iter","keys","next","done","values","notify","remove","createPresentationModelDeletedCommand","pmStoreEvent","clientPresentationModel","NoTransmitter","onDone","DolphinBuilder","setClientConnector","setClientModelStore","dolphinBuilder","DOLPHIN_BEAN","ACTION_CALL_BEAN","HIGHLANDER_BEAN","DOLPHIN_LIST_SPLICE","SOURCE_SYSTEM","SOURCE_SYSTEM_CLIENT","SOURCE_SYSTEM_SERVER","Connector","dolphin","classRepository","config","highlanderPMResolver","highlanderPMPromise","onModelStoreChange","sourceSystem","eventType","onModelAdded","onModelRemoved","that","startPushListening","createStartLongPollCommand","createInterruptLongPollCommand","registerClass","spliceListEntry","load","unregisterClass","unload","reason","BeanManager","addedHandlers","removedHandlers","updatedHandlers","arrayUpdatedHandlers","allAddedHandlers","allRemovedHandlers","allUpdatedHandlers","allArrayUpdatedHandlers","_handleBeanAdded","_handleBeanRemoved","_handleBeanUpdate","_handleArrayUpdate","onBeanAdded","onBeanRemoved","onBeanUpdate","onArrayUpdate","bean","handlerList","e","index","count","newElements","notifyBeanChange","removedElements","notifyArrayChange","collection","predicate","concat","unsubscribe","ClassRepository","classes","beanFromDolphin","beanToDolphin","classInfos","beanAddedHandlers","beanRemovedHandlers","propertyUpdateHandlers","arrayUpdateHandlers","blocked","modelId","to","classInfo","toDolphin","apply","undefined","fromDolphin","isBlocked","array","removedElementsCount","isArray","sendListSplice","search","validateList","block","unblock","toISOString","TypeError","consts","fixType","parseFloat","ControllerProxy","manager","destroyed","onDestroyedHandlers","invokeAction","_createController","getId","destroyController","MODEL","ERROR_CODE","ControllerManager","controllers","getHighlanderPM","then","highlanderPM","MSG_ERROR_CREATING_CONTROLLER","invoke","createCreateControllerCommand","getValueWithRetry","ctrlId","mapDolphinToBean","controller","catch","getValueCall","errorMessage","RETRIES","RETRY_TIME","intervalID","setInterval","clearInterval","pm","actionParams","mapParamToDolphin","createCallActionCommand","isError","createDestroyControllerCommand","controllersCopy","promises","destroy","all","ClientContext","beanManager","controllerManager","_controllerManager","_connector","connectionPromise","isConnected","connect","createCreateContextCommand","createController","stopPushListening","createDestroyContextCommand","Emitter","prototype","DolphinRemotingError","detail","DolphinSessionError","HttpResponseError","HttpNetworkError","RemotingErrorHandler","DOLPHIN_SESSION_TIMEOUT","PlatformHttpTransmitter","failed_attempt","connectionConfig","_connectionConfig","maxRetry","connection","errorHandlers","encodedCommands","encode","isLogLevelUseable","httpClient","post","withHeadersInfo","withContent","readString","execute","exception","getStatus","_handleError","_send","responseText","responseCommands","decode","err","errorMsg","emit","ClientContextFactory","legecyClientSupport","on","clientContext","withTransmitter","withSlackMS","withMaxBatchSize","MAX_SAFE_INTEGER","build","createClientContext","create","clientContextFactoryProvider","KeycloakConnection","authEndpoint","realmName","KeycloakFunctions","directConnection","appName","encodedUser","encodeURIComponent","encodedPassword","encodedAppName","createDirectConnection","createServerProxyConnection","refreshToken","body","createRefreshConnection","receiveToken","SecurityHttpClientInterceptor","token","realm","KeycloakSecurity","functions","interceptor","intervall","isAuthorized","createLoginConnection","access_token","setToken","setRealm","setAppName","expires","expires_in","MIN_TOKEN_EXPIRES_RUN","sleepTime","Math","max","TOKEN_EXPIRES_DELTA","refresh_token","securityProvider","registerHttp","registerClientScope","registerRemotingScope","registerSecurity","info","RICO_VERSION","Worker","Blob","URL","createObjectURL","HttpWorker","blob","RICO_WORKER","httpWorkerProvider","showWarning"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;ACjFA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAC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","file":"rico.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ricojs\"] = factory();\n\telse\n\t\troot[\"ricojs\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const LogLevel = {\n    NONE: { name: 'NONE', text: '[NONE ]', level: 0 },\n    ALL: { name: 'ALL', text: '[ALL  ]', level: 100 },\n    TRACE: { name: 'TRACE', text: '[TRACE]', level: 5 },\n    DEBUG: { name: 'DEBUG', text: '[DEBUG]', level: 4 },\n    INFO: { name: 'INFO', text: '[INFO ]', level: 3 },\n    WARN: { name: 'WARN', text: '[WARN ]', level: 2 },\n    ERROR: { name: 'ERROR', text: '[ERROR]', level: 1 },\n};\n\nexport { LogLevel };","var _checkMethodName;\n\nexport function exists(object) {\n    return typeof object !== 'undefined' && object !== null;\n}\n\nexport function checkMethod(name) {\n    _checkMethodName = name;\n}\n\nexport function checkParam(param, parameterName) {\n    if(!exists(param)) {\n        throw new Error('The parameter ' + parameterName + ' is mandatory in ' + _checkMethodName);\n    }\n}\n\nexport function parseUrl(url) {\n    //https://jsperf.com/url-parsing\n    const pattern = /^(((([^:\\/#\\?]+:)?(?:(\\/\\/)((?:(([^:@\\/#\\?]+)(?:\\:([^:@\\/#\\?]+))?)@)?(([^:\\/#\\?\\]\\[]+|\\[[^\\/\\]@#?]+\\])(?:\\:([0-9]+))?))?)?)?((\\/?(?:[^\\/\\?#]+\\/+)*)([^\\?#]*)))?(\\?[^#]+)?)(#.*)?/\n    const matches =  url.match(pattern);\n\n    let scheme;\n    if (matches[4] && matches[4].length > 1) {\n        scheme = matches[4].substring(0, matches[4].length-1);\n    }\n\n    let path = matches[13];\n\n    let query;\n    if (matches[16] && matches[16].length > 1) {\n        query = matches[16].substring(1, matches[16].length);\n        const hashes = query.split('&');\n        query = hashes.reduce((params, hash) => {\n            let [key, val] = hash.split('=')\n            return Object.assign(params, {[key]: val})\n        }, {});\n    }\n\n    let fragment;\n    if (matches[17] && matches[17].length > 1) {\n        fragment = matches[17].substring(1, matches[17].length);\n    }\n\n    let hostname = matches[11];\n    let port = matches[12];\n    if (hostname && !port && scheme === 'http') {\n        port = 80;\n    } else if (hostname && !port && scheme === 'https') {\n        port = 443;\n    }\n\n    //relative url? get hostname and port from the browser\n    if (!hostname && !port && !scheme) {\n        \n        if (window && window.location && window.location.hostname) {\n            hostname = window.location.hostname;\n        }\n        if (window && window.location && window.location.port) {\n            port = window.location.port;\n        }\n        if (window && window.location && window.location.protocol) {\n            scheme = window.location.protocol.substring(0, window.location.protocol.length-1) ;\n        }\n        // strip '.' from relative path\n        if (path.indexOf('.') === 0) {\n            path = path.substring(1, path.length);\n        }\n    }\n\n    // port should be a number, always\n    if (port) {\n        port = parseInt(port);\n    }\n\n    return {\n        scheme: scheme,\n        user: matches[8],\n        password: matches[9],\n        hostname: hostname,\n        port: port,\n        path: path,\n        query: query,\n        fragment: fragment\n    };\n    \n}\n\n","import {checkParam, exists} from '../utils'\nimport { LogLevel } from \"./constants\";\n\n// private methods\nconst LOCALS = {\n    pad (text, size) {\n        let result = '' + text;\n        while (result.length < size) {\n            result = '0' + result;\n        }\n        return result;\n    },\n    internalLog () {\n        const args = Array.from(arguments);\n        const func = args.shift();\n        const context = args.shift();\n        const logLevel = args.shift();\n        const date = new Date();\n        const dateString =  date.getFullYear() + '-' + LOCALS.pad(date.getMonth() + 1, 2) + '-' + LOCALS.pad(date.getDate(), 2) + ' ' + LOCALS.pad(date.getHours(), 2) + ':' + LOCALS.pad(date.getMinutes(), 2) + ':' + LOCALS.pad(date.getSeconds(), 2) + '.' + LOCALS.pad(date.getMilliseconds(), 3);\n        func(dateString, logLevel.text, context, ...args);\n\n    },\n    getCookie (name) {\n        if (exists(window) && exists(window.document) && exists(window.document.cookie)) {       \n            const value = '; ' + window.document.cookie;\n            const parts = value.split('; ' + name + '=');\n            if ( parts.length === 2 ) {\n                return parts.pop().split(';').shift();\n            }\n        }\n    }\n};\n\n\n// public\nclass Logger {\n\n    constructor(context, rootLogger) {\n        this.context = context;\n        this.rootLogger = rootLogger;\n        const cookieLogLevel = LOCALS.getCookie('RICO_LOGGER_' + this.context);\n        switch (cookieLogLevel) {\n            case 'NONE':\n                this.logLevel = LogLevel.NONE;\n                break;\n            case 'ALL':\n                this.logLevel = LogLevel.ALL;\n                break;\n            case 'TRACE':\n                this.logLevel = LogLevel.TRACE;\n                break;\n            case 'DEBUG':\n                this.logLevel = LogLevel.DEBUG;\n                break;\n            case 'INFO':\n                this.logLevel = LogLevel.INFO;\n                break;\n            case 'WARN':\n                this.logLevel = LogLevel.WARN;\n                break;\n            case 'ERROR':\n                this.logLevel = LogLevel.ERROR;\n                break;\n        }\n\n    }\n\n    trace() {\n        if (exists(console) && this.isLogLevel(LogLevel.TRACE)) {\n            LOCALS.internalLog(console.log, this.context, LogLevel.TRACE, ...arguments);\n        }\n    }\n\n    debug() {\n        if (exists(console) && this.isLogLevel(LogLevel.DEBUG)) {\n            LOCALS.internalLog(console.log, this.context, LogLevel.DEBUG, ...arguments);\n        }\n    }\n\n    info() {\n        if (exists(console) && this.isLogLevel(LogLevel.INFO)) {\n            LOCALS.internalLog(console.log, this.context, LogLevel.INFO, ...arguments);\n        }\n    }\n\n    warn() {\n        if (exists(console) && this.isLogLevel(LogLevel.WARN)) {\n            LOCALS.internalLog(console.warn, this.context, LogLevel.WARN, ...arguments);\n        }\n    }\n\n    error() {\n        if (exists(console) && this.isLogLevel(LogLevel.ERROR)) {\n            LOCALS.internalLog(console.error, this.context, LogLevel.ERROR, ...arguments);\n        }\n    }\n\n    getLogLevel() {\n        if (exists(this.logLevel)) {\n            return this.logLevel;\n        } else if (exists(this.rootLogger)) {\n            return this.rootLogger.getLogLevel();\n        } else {\n            return LogLevel.INFO;\n        }\n    }\n\n    setLogLevel(level) {\n        this.logLevel = level;\n    }\n\n    setLogLevelByName(levelName) {\n        if (exists(LogLevel[levelName])) {\n            this.logLevel = LogLevel[levelName];\n        }\n    }\n\n    isLogLevel(level) {\n        if (this.getLogLevel() === LogLevel.NONE) {\n            return false;\n        }\n        if (this.getLogLevel() === LogLevel.ALL) {\n            return true;\n        }\n        if (this.getLogLevel() === LogLevel.TRACE) {\n            return true;\n        }\n        if (this.getLogLevel() === LogLevel.DEBUG && level !== LogLevel.TRACE) {\n            return true;\n        }\n        if (this.getLogLevel() === LogLevel.INFO && level !== LogLevel.TRACE && level !== LogLevel.DEBUG) {\n            return true;\n        }\n        if (this.getLogLevel() === LogLevel.WARN && level !== LogLevel.TRACE && level !== LogLevel.DEBUG && level !== LogLevel.INFO) {\n            return true;\n        }\n        if (this.getLogLevel() === LogLevel.ERROR && level !== LogLevel.TRACE && level !== LogLevel.DEBUG && level !== LogLevel.INFO && level !== LogLevel.WARN) {\n            return true;\n        }\n        return false;\n    }\n\n    isLogLevelUseable(level) {\n        checkParam(level, 'level');\n        if (level.level) {\n            return this.getLogLevel().level >= level.level;\n        } else {\n            return false;\n        }\n    }\n}\n\nexport { Logger };","import { exists } from \"../utils\";\nimport { Logger } from \"./logger\";\n\nconst ROOT_LOGGER = new Logger('ROOT');\n\n// private methods\nconst LOCALS = {\n    loggers: new Map()\n};\n\n\n// public\nclass LoggerFactory {\n\n    static getLogger(context) {\n        if (!exists(context) || context === 'ROOT') {\n            return ROOT_LOGGER;\n        }\n        const existingLogger = LOCALS.loggers.get(context);\n        if (existingLogger) {\n            return existingLogger;\n        }\n\n        const logger = new Logger(context, ROOT_LOGGER);\n        LOCALS.loggers.set(context, logger);\n        return logger;\n    }\n}\n\nexport { LoggerFactory }","import { LogLevel } from \"./constants\";\nimport { LoggerFactory } from \"./loggerfactory\";\n\nexport { LogLevel, LoggerFactory };","import {exists} from '../utils';\nimport { LoggerFactory } from '../logging';\n\nclass Client {\n\n}\n\nClient.LOGGER = LoggerFactory.getLogger('Client');\n\nClient.services = new Map();\nClient.serviceProviders = new Map();\nClient.configuration = {};\n\nClient.getService = function(name) {\n    let service = Client.services.get(name);\n    if (!exists(service)) {\n        let provider = Client.serviceProviders.get(name);\n        if (!exists(provider)) {\n            throw new Error('No service provider found for ' + name);\n        } else {\n            service = provider.getService(Client.configuration);\n            Client.services.set(name, service);\n        }\n    }\n    return service;\n};\n\nClient.hasService = function(name) {\n    const provider = Client.serviceProviders.get(name);\n    if (!exists(provider)) {\n        return false;\n    } else {\n        return true;\n    }\n};\n\nClient.getAllServiceTypes = function() {\n    let result = [];\n    Client.serviceProviders.forEach((serviceProvider) => result.push(serviceProvider));\n    return result;\n};\n\n\nClient.registerServiceProvider = function(serviceProvider) {\n    if (serviceProvider === null || typeof serviceProvider === 'undefined') {\n        throw new Error('Cannot register empty service provider');\n    }\n    \n    if (typeof serviceProvider.getName === 'function' && typeof serviceProvider.getService === 'function') {\n        const current = Client.serviceProviders.get(serviceProvider.getName());\n        if (!current) {\n            Client.serviceProviders.set(serviceProvider.getName(), serviceProvider);\n            Client.LOGGER.debug('Service provider registered with name', serviceProvider.getName());\n        } else {\n            throw new Error('Cannot register another service provider. Name already in use.');\n        }\n    } else {\n        throw new Error('Cannot register service provider without getName() and getService() methods');\n    }\n};\n\nClient.init = function() {\n    Client.serviceProviders.forEach((serviceProvider) => {\n        const service = serviceProvider.getService();\n        Client.LOGGER.trace('Initializing service for service provider', serviceProvider.getName());\n        if (typeof service.initServiceProvider === 'function') {\n            Client.LOGGER.debug('Initializing service', service);\n            service.initServiceProvider(Client);\n        }\n    });\n}\n\nexport { Client }","import { checkMethod, checkParam } from '../utils'\nclass ServiceProvider {\n\n    constructor(serviceClass, name, client) {\n        checkMethod('constructor');\n        checkParam(serviceClass, 'serviceClass');\n        checkParam(name, 'name');\n        \n        this.serviceInstance = new serviceClass(client);\n        this.name = name;\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    getService() {\n        return this.serviceInstance;\n    }\n}\n\nexport { ServiceProvider }","// Reponse type\nexport const RESPONSE_TYPE = {\n    ARRAY_BUFFER: 'arraybuffer',\n    TEXT: 'text',\n    JSON: 'json'\n}\n\n// HTTP methods and status codes\nexport const HTTP = {\n    METHOD: {\n        GET: 'GET',\n        POST: 'POST',\n        PUT: 'PUT',\n        DELETE: 'DELETE'\n    },\n    STATUS: {\n        ACCEPTED: 202,\n        BAD_GATEWAY: 502,\n        BAD_REQUEST: 400,\n        CONFLICT: 409,\n        CONTINUE: 100,\n        CREATED: 201,\n        EXPECTATION_FAILED: 417,\n        FAILED_DEPENDENCY : 424,\n        FORBIDDEN: 403,\n        GATEWAY_TIMEOUT: 504,\n        GONE: 410,\n        HTTP_VERSION_NOT_SUPPORTED: 505,\n        IM_A_TEAPOT: 418,\n        INSUFFICIENT_SPACE_ON_RESOURCE: 419,\n        INSUFFICIENT_STORAGE: 507,\n        INTERNAL_SERVER_ERROR: 500,\n        LENGTH_REQUIRED: 411,\n        LOCKED: 423,\n        METHOD_FAILURE: 420,\n        METHOD_NOT_ALLOWED: 405,\n        MOVED_PERMANENTLY: 301,\n        MOVED_TEMPORARILY: 302,\n        MULTI_STATUS: 207,\n        MULTIPLE_CHOICES: 300,\n        NETWORK_AUTHENTICATION_REQUIRED: 511,\n        NO_CONTENT: 204,\n        NON_AUTHORITATIVE_INFORMATION: 203,\n        NOT_ACCEPTABLE: 406,\n        NOT_FOUND: 404,\n        NOT_IMPLEMENTED: 501,\n        NOT_MODIFIED: 304,\n        OK: 200,\n        PARTIAL_CONTENT: 206,\n        PAYMENT_REQUIRED: 402,\n        PERMANENT_REDIRECT: 308,\n        PRECONDITION_FAILED: 412,\n        PRECONDITION_REQUIRED: 428,\n        PROCESSING: 102,\n        PROXY_AUTHENTICATION_REQUIRED: 407,\n        REQUEST_HEADER_FIELDS_TOO_LARGE: 431,\n        REQUEST_TIMEOUT: 408,\n        REQUEST_TOO_LONG: 413,\n        REQUEST_URI_TOO_LONG: 414,\n        REQUESTED_RANGE_NOT_SATISFIABLE: 416,\n        RESET_CONTENT: 205,\n        SEE_OTHER: 303,\n        SERVICE_UNAVAILABLE: 503,\n        SWITCHING_PROTOCOLS: 101,\n        TEMPORARY_REDIRECT: 307,\n        TOO_MANY_REQUESTS: 429,\n        UNAUTHORIZED: 401,\n        UNPROCESSABLE_ENTITY: 422,\n        UNSUPPORTED_MEDIA_TYPE: 415,\n        USE_PROXY: 305\n    },\n    HEADER_NAME: {\n        ACCEPT: 'Accept',\n        ACCEPT_CHARSET: 'Accept-Charset', \n        ACCEPT_ENCODING: 'Accept-Encoding', \n        ACCEPT_LANGUAGE: 'Accept-Language',\n        ACCEPT_DATETIME: 'Accept-Datetime',\n        AUTHORIZATION: 'Authorization',\n        CACHE_CONTROL: 'Cache-Control',\n        CONNECTION: 'Connection',\n        COOKIE: 'Cookie',\n        CONTENT_LENGTH: 'Content-Length',\n        CONTENT_MD5: 'Content-MD5',\n        CONTENT_TYPE: 'Content-Type',\n        DATE: 'Date',\n        EXPECT: 'Expect',\n        FORWARDED: 'Forwarded',\n        FROM: 'From',\n        HOST: 'Host', \n        IF_MATCH: 'If-Match', \n        IF_MODIFIED_SINCE: 'If-Modified_Since',\n        IF_NONE_MATCH: 'If-None_Match',\n        IF_RANGE: 'If-Range',\n        MAX_FORWARDS: 'Max-Forwards',\n        PRAGMA: 'Pragma', \n        PROXY_AUTHORIZATION: 'Proxy-Authorization',\n        REFERER: 'Referer',\n        TE: 'TE',\n        USER_AGENT: 'User-Agent',\n        X_CLIENT_ID: 'X-Client-Id',\n        X_CLIENT_SESSION_ID: 'X-Client-Session-Id',\n        X_PLATFORM_SECURITY_REALM: 'X-platform-security-realm',\n        X_PLATFORM_SECURITY_BEARER_ONLY: 'X-platform-security-bearer-only',\n        X_PLATFORM_SECURITY_APPLICATION: 'X-platform-security-application'\n    },\n    CONTENT_TYPE: {\n        APPLICATION_JSON: 'application/json',\n        APPLICATION_X_WWW_FORM_URLENCODED: 'application/x-www-form-urlencoded',\n        TEXT_HTML: 'text/html',\n        TEXT_PLAIN: 'text/plain'\n    },\n    XMLHTTPREQUEST_READYSTATE: {\n        UNSENT: 0,\n        OPENED: 1,\n        HEADERS_RECEIVED: 2,\n        LOADING: 3,\n        DONE:4\n    }\n}\n\n// Security\nexport const SECURITY = {\n    AUTH_ENDPOINT: '/openid-connect'\n}","import { exists, checkMethod, checkParam } from '../utils';\nclass HttpResponse {\n\n    constructor(url, status, content, headers) {\n        this.url = url;\n        this.status = status;\n        this.content = content;\n        this.headers = {};\n        if (exists(headers) && typeof headers === 'string') {\n            const headerArray = headers.trim().split(/[\\r\\n]+/);\n            for (let i = 0; i < headerArray.length; i++) {\n                const line = headerArray[i];\n                const parts = line.split(': ');\n                if (parts.length === 2) {\n                    const header = parts.shift().toLowerCase();\n                    const value = parts.join(': ');\n                    this.headers[header] = value;\n                }\n            }\n        }\n    }\n\n    getUrl() {\n        return this.url;\n    }\n\n    getContent() {\n        return this.content;\n    }\n\n    getStatus() {\n        return this.status;\n    }\n\n    getHeaders() {\n        return this.headers;\n    }\n\n    getHeaderByName(name) {\n        checkMethod('getHeaderByName');\n        checkParam(name, 'name');\n        \n        return this.headers[name.toLowerCase()];\n    }\n\n}\n\nexport { HttpResponse }","class HttpException {\n\n    constructor(message, status, timedout) {\n        this.message = message;\n        this.status = status || 0;\n        this.timedout = timedout || false;\n    }\n\n    getMessage() {\n        return this.message;\n    }\n\n    getStatus() {\n        return this.status;\n    }\n\n    isTimedout() {\n        return this.timedout;\n    }\n\n}\n\nexport { HttpException }","import { LoggerFactory } from '../logging';\nimport { HttpResponse } from './httpResponse';\nimport { HttpException } from './httpException';\nimport { HTTP } from '../platform/constants';\nclass Executor {\n\n    constructor(configuration, client) {\n        this.configuration = configuration;\n        this.client = client;\n    }\n\n    execute(timeout, worker) {\n\n        let httpWorker = null;\n        if (this.client && this.client.hasService('HttpWorker')) {\n            httpWorker = this.client.getService('HttpWorker');\n        }\n\n        const useWorker = httpWorker !== null && (worker === true || timeout === true);\n        let timeoutToUse = 0;\n        if (timeout !== true && timeout !== false) {\n            timeoutToUse = timeout;\n        }\n\n        let requestInterceptors = [];\n        if (this.client) {\n            requestInterceptors = this.client.getService('HttpClientInterceptor').getRequestInterceptors();\n            Executor.LOGGER.trace('Request interceptors found:', requestInterceptors);\n        }\n\n        let responseInterceptors = [];\n        if (this.client) {\n            responseInterceptors = this.client.getService('HttpClientInterceptor').getResponseInterceptors();\n            Executor.LOGGER.trace('Response interceptors found:', responseInterceptors);\n        }\n\n        let directCall = (resolve, reject) => {\n\n            const self = this;\n            const httpRequest = new XMLHttpRequest();\n            const async = true;\n            \n            httpRequest.open(this.configuration.method, this.configuration.url, async);\n            httpRequest.url = this.configuration.url;\n            httpRequest.method = this.configuration.method;\n            httpRequest.withCredentials = true;\n\n            for (let i = 0; i < requestInterceptors.length; i++) {\n                const requestInterceptor = requestInterceptors[i];\n                requestInterceptor.handleRequest(httpRequest);\n            }\n\n            if (this.configuration.headers && this.configuration.headers.length > 0) {\n                for (let i = 0; i < this.configuration.headers.length; i++) {\n                    const header = this.configuration.headers[i];\n                    httpRequest.setRequestHeader(header.name, header.value);\n                }\n            }\n\n            httpRequest.timeout = timeoutToUse;\n\n            if (this.configuration.responseType) {\n                httpRequest.responseType = this.configuration.responseType;\n            }\n\n            httpRequest.ontimeout = function () {\n                const message = this.statusText || 'Timeout occurred';\n                const httpException = new HttpException(message, this.status, true);\n                Executor.LOGGER.error(httpException);\n                reject(httpException);\n            }\n\n            httpRequest.onerror = function () {\n                let message = this.statusText || 'Unspecified error occured';\n                const httpException = new HttpException(message, this.status);\n                Executor.LOGGER.error(httpException);\n                reject(httpException);\n            }\n\n            httpRequest.onreadystatechange = function () {\n                if (this.readyState === HTTP.XMLHTTPREQUEST_READYSTATE.DONE) {\n                    Executor.LOGGER.trace('Request to ', self.configuration.url, 'finished with', this.status);\n                }\n                if (this.readyState === HTTP.XMLHTTPREQUEST_READYSTATE.DONE && this.status >= 200 && this.status < 300) {\n                    // https://www.w3.org/TR/cors/#simple-response-header\n                    const httpResponse = new HttpResponse(this.url, this.status, this.response, this.getAllResponseHeaders());\n                    \n                    for (let i = 0; i < responseInterceptors.length; i++) {\n                        const responseInterceptor = responseInterceptors[i];\n                        responseInterceptor.handleResponse(httpResponse);\n                    }\n\n                    resolve(httpResponse);\n                } else if (this.readyState === HTTP.XMLHTTPREQUEST_READYSTATE.DONE && this.status >= 300) {\n                    const httpException = new HttpException(this.statusText, this.status);\n                    Executor.LOGGER.error(httpException);\n                    reject(httpException);\n                }\n            }\n\n            httpRequest.send(this.configuration.requestBody);\n\n        }\n        directCall = directCall.bind(this);\n\n        let workerCall = (resolve, reject) => {\n           \n            const collectedRequestHeaders = [];\n            for (let i = 0; i < requestInterceptors.length; i++) {\n                const requestInterceptor = requestInterceptors[i];\n                \n                requestInterceptor.handleRequest({\n                    url: this.configuration.url,\n                    setRequestHeader: (name, value) => {\n                        const header = {name, value};\n                        collectedRequestHeaders.push(header);\n                    }\n                });\n            }\n\n            const worker = httpWorker.createWorker();\n            try {\n                worker.onmessage = function(event) {\n                    worker.terminate();\n                    Executor.LOGGER.trace('Message form Worker', event);\n                    const msg = event.data;\n                    if (msg.error) {\n                        const httpException = new HttpException(msg.message, msg.status, msg.timedout);\n                        Executor.LOGGER.error(httpException);\n                        reject(httpException);\n                    } else {\n                        const httpResponse = new HttpResponse(msg.url, msg.status, msg.response, msg.responseHeaders);\n\n                        for (let i = 0; i < responseInterceptors.length; i++) {\n                            const responseInterceptor = responseInterceptors[i];\n                            responseInterceptor.handleResponse(httpResponse);\n                        }\n\n                        resolve(httpResponse);\n                    }\n                }\n                worker.onerror = function(event) {\n                    const httpException = new HttpException(event.data, 0, false);\n                    reject(httpException);\n                }\n                worker.postMessage({conf: this.configuration, timeout: timeoutToUse, requestHeaders: collectedRequestHeaders});\n            } catch (error) {\n                const httpException = new HttpException(error, 0, false);\n                reject(httpException);\n            }\n\n        }\n\n        workerCall = workerCall.bind(this);\n\n        return new Promise((resolve, reject) => {\n            if (useWorker && this.client && this.client.hasService('HttpWorker')) {\n                workerCall(resolve, reject);\n            } else {\n                directCall(resolve, reject);\n            }\n        });\n        \n    }\n\n}\n\nExecutor.LOGGER = LoggerFactory.getLogger('Executor');\n\nexport { Executor }","import { Executor } from './executor';\nimport { RESPONSE_TYPE } from '../platform/constants';\nclass ResponseBuilder {\n\n    constructor(configuration, client) {\n        this.configuration = configuration;\n        this.executor = new Executor(configuration, client);\n    }\n\n    readBytes() {\n        this.configuration.responseType = RESPONSE_TYPE.ARRAY_BUFFER;\n        return this.executor;\n    }\n\n    readString() {\n        this.configuration.responseType = RESPONSE_TYPE.TEXT;\n        return this.executor;\n    }\n\n    readObject() {\n        this.configuration.responseType = RESPONSE_TYPE.JSON;\n        return this.executor;\n    }\n\n    withoutResult() {\n        return this.executor;\n    }\n}\n\nexport { ResponseBuilder }","import { ResponseBuilder } from './reponseBuilder';\nimport { exists } from '../utils';\nclass RequestBuilder {\n\n    constructor(configuration, client) {\n        this.configuration = configuration;\n        this.reponseBuilder = new ResponseBuilder(configuration, client);\n    }\n\n    withHeader(name, value) {\n        if (!this.configuration.headers) {\n            this.configuration.headers = [];\n        }\n        this.configuration.headers.push({ name, value });\n        return this;\n    }\n\n    withHeadersInfo(headersInfo) {\n        if (exists(headersInfo)) {\n            if (!this.configuration.headers) {\n                this.configuration.headers = [];\n            }\n            for (let name in headersInfo) {\n                if (headersInfo.hasOwnProperty(name)) {\n                    const value = headersInfo[name];\n                    this.configuration.headers.push({ name, value });\n                }\n            }\n        }\n        return this;\n    }\n\n    withContent(data) {\n        this.configuration.requestBody = data;\n        return this.reponseBuilder;\n    }\n\n    withoutContent() {\n        return this.reponseBuilder;\n    }\n}\n\nexport { RequestBuilder }","import { RequestBuilder } from './requestBuilder';\nimport { HTTP } from '../platform/constants';\nclass HttpClient {\n\n    constructor(client) {\n        this.client = client;\n    }\n\n    request(url, method) {\n        const configuration = {\n            url, method\n        }\n        this.requestBuilder = new RequestBuilder(configuration, this.client);\n        return this.requestBuilder;\n    }\n\n    get(url) {\n        return this.request(url, HTTP.METHOD.GET);\n    }\n\n    post(url) {\n        return this.request(url, HTTP.METHOD.POST);\n    }\n\n    put(url) {\n        return this.request(url, HTTP.METHOD.PUT);\n    }\n\n    delete(url) {\n        return this.request(url, HTTP.METHOD.DELETE);\n    }\n}\n\nexport { HttpClient }","class HttpClientInterceptor {\n\n    constructor() {\n        this.requestHandlers = new Set();\n        this.responseHandlers = new Set();\n    }\n\n    addRequestInterceptor(handler) {\n        this.requestHandlers.add(handler);\n    }\n\n    getRequestInterceptors() {\n        let list = [];\n        this.requestHandlers.forEach(handler => list.push(handler));\n        return list;\n    }\n\n    addResponseInterceptor(handler) {\n        this.responseHandlers.add(handler);\n    }\n\n    getResponseInterceptors() {\n        let list = [];\n        this.responseHandlers.forEach(handler => list.push(handler));\n        return list;\n    }\n}\n\nexport { HttpClientInterceptor }","import { HttpClient } from './httpClient';\nimport { HttpClientInterceptor } from './httpClientInterceptor';\nimport { ServiceProvider } from '../platform/serviceProvider';\nimport { exists } from '../utils'\n\nfunction register(client) {\n    if (exists(client)) {\n        const httpClientProvider = new ServiceProvider(HttpClient, 'HttpClient', client);\n        const httpClientInterceptorProvider = new ServiceProvider(HttpClientInterceptor, 'HttpClientInterceptor', client);\n    \n        client.registerServiceProvider(httpClientProvider);\n        client.registerServiceProvider(httpClientInterceptorProvider);\n    }\n}\n\nexport { register }","import { checkMethod, checkParam, parseUrl, exists } from '../utils';\nimport { ServiceProvider  } from './serviceProvider';\nimport { LoggerFactory } from '../logging';\nimport { HTTP } from './constants';\n\nclass ClientScope {\n\n    constructor() {\n        this.clientIds = new Map();\n    }\n\n    handleRequest(httpRequest) {\n        checkMethod('handleRequest');\n        checkParam(httpRequest, 'httpRequest');\n        const clientId = this.getClientId(httpRequest.url);\n        if (exists(clientId)) {\n            ClientScope.LOGGER.trace('Using ClientId', clientId);\n            httpRequest.setRequestHeader(HTTP.HEADER_NAME.X_CLIENT_SESSION_ID, clientId);\n        }\n    }\n\n    handleResponse(httpResponse) {\n        checkMethod('handleResponse');\n        checkParam(httpResponse, 'httpResponse');\n        const clientId = this.getClientId(httpResponse.url);\n        const newClientId = httpResponse.getHeaderByName(HTTP.HEADER_NAME.X_CLIENT_SESSION_ID);\n        if (exists(clientId) && exists(newClientId) && clientId !== newClientId) {\n            throw new Error('Client Id does not match!');\n        }\n        if (!exists(clientId) && exists(newClientId)) {\n            ClientScope.LOGGER.debug('New ClientId found', newClientId);\n            this.setClientId(httpResponse.url, newClientId);\n        }\n    }\n\n    initServiceProvider(client) {\n        checkMethod('initServiceProvider');\n        checkParam(client, 'client');\n        client.getService('HttpClientInterceptor').addRequestInterceptor(this);\n        client.getService('HttpClientInterceptor').addResponseInterceptor(this);\n    }\n\n    getClientId(url) {\n        const result = parseUrl(url);\n        const key = ClientScope.calcKey(result.hostname, result.port)\n        return this.clientIds.get(key);\n    }\n\n    setClientId(url, clientId) {\n        const result = parseUrl(url);\n        const key = ClientScope.calcKey(result.hostname, result.port)\n        this.clientIds.set(key, clientId);\n        ClientScope.LOGGER.trace('Setting ClientId', clientId, 'for', url, 'with key', key);\n    }\n\n}\n\nClientScope.calcKey = function(hostname, port) {\n    return hostname + port;\n}\n\nClientScope.LOGGER = LoggerFactory.getLogger('ClientScope');\n\nfunction register(client) {\n    if (exists(client)) {\n        const clientScopeProvider = new ServiceProvider(ClientScope, 'ClientScope');\n\n        client.registerServiceProvider(clientScopeProvider);\n    }\n}\n\nexport { register }","export const ATTRIBUTE_METADATA_CHANGED_COMMAND_ID = 'AttributeMetadataChanged';\nexport const CALL_ACTION_COMMAND_ID = 'CallAction';\nexport const CHANGE_ATTRIBUTE_METADATA_COMMAND_ID = 'ChangeAttributeMetadata';\nexport const CREATE_CONTEXT_COMMAND_ID = 'CreateContext';\nexport const CREATE_CONTROLLER_COMMAND_ID = 'CreateController';\nexport const CREATE_PRESENTATION_MODEL_COMMAND_ID = 'CreatePresentationModel';\nexport const DELETE_PRESENTATION_MODEL_COMMAND_ID = 'DeletePresentationModel';\nexport const DESTROY_CONTEXT_COMMAND_ID = 'DestroyContext';\nexport const DESTROY_CONTROLLER_COMMAND_ID = 'DestroyController';\nexport const INTERRUPT_LONG_POLL_COMMAND_ID = 'InterruptLongPoll';\nexport const PRESENTATION_MODEL_DELETED_COMMAND_ID = 'PresentationModelDeleted';\nexport const START_LONG_POLL_COMMAND_ID = 'StartLongPoll';\nexport const VALUE_CHANGED_COMMAND_ID = 'ValueChanged';\n\nexport const ID = \"id\";\nexport const ATTRIBUTE_ID = \"a_id\";\nexport const PM_ID = \"p_id\";\nexport const CONTROLLER_ID = \"c_id\";\nexport const PM_TYPE = \"t\";\nexport const NAME = \"n\";\nexport const VALUE = \"v\";\nexport const PARAMS = \"p\";\nexport const PM_ATTRIBUTES = \"a\";","import {VALUE_CHANGED_COMMAND_ID, PRESENTATION_MODEL_DELETED_COMMAND_ID} from './commands/commandConstants';\n\nexport default class BlindCommandBatcher {\n    constructor(folding = true, maxBatchSize = 50) {\n        this.folding = folding;\n        this.maxBatchSize = maxBatchSize;\n    }\n    batch(queue) {\n        let batch = [];\n        let batchLength = 0;\n        while(queue[batchLength] && batchLength <= this.maxBatchSize) {\n            const element = queue[batchLength];\n            batchLength++;\n            if(this.folding) {\n                if(element.command.id == VALUE_CHANGED_COMMAND_ID &&\n                    batch.length > 0 &&\n                    batch[batch.length - 1].command.id == VALUE_CHANGED_COMMAND_ID &&\n                    element.command.attributeId == batch[batch.length - 1].command.attributeId) {\n                    //merge ValueChange for same value\n                    batch[batch.length - 1].command.newValue = element.command.newValue;\n                } else if(element.command.id == PRESENTATION_MODEL_DELETED_COMMAND_ID) {\n                    //We do not need it...\n                } else {\n                    batch.push(element);\n                }\n            } else {\n                batch.push(element);\n            }\n            if(element.handler) {\n                break;\n            }\n        }\n        queue.splice(0, batchLength);\n        return batch;\n    }\n}","export const JS_STRING_TYPE = 'string';\n\nexport const REMOTING_BEAN = 0;\nexport const BYTE = 1;\nexport const SHORT = 2;\nexport const INT = 3;\nexport const LONG = 4;\nexport const FLOAT = 5;\nexport const DOUBLE = 6;\nexport const BOOLEAN = 7;\nexport const STRING = 8;\nexport const DATE = 9;\nexport const ENUM = 10;\nexport const CALENDAR = 11;\nexport const LOCAL_DATE_FIELD_TYPE = 55;\nexport const LOCAL_DATE_TIME_FIELD_TYPE = 52;\nexport const ZONED_DATE_TIME_FIELD_TYPE = 54;\n\n\nexport const ADDED_TYPE = \"ADDED\";\nexport const REMOVED_TYPE = \"REMOVED\";\n","import {VALUE_CHANGED_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../../utils';\n\nexport default class ValueChangedCommand {\n\n    constructor() {\n        this.id = VALUE_CHANGED_COMMAND_ID;\n    }\n\n    init(attributeId, newValue) {\n        checkMethod('ValueChangedCommand.init()');\n        checkParam(attributeId, 'attributeId');\n\n        this.attributeId = attributeId;\n        this.newValue = newValue;\n    }\n}","import {ATTRIBUTE_METADATA_CHANGED_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../../utils';\n\nexport default class AttributeMetadataChangedCommand {\n\n    constructor() {\n        this.id = ATTRIBUTE_METADATA_CHANGED_COMMAND_ID;\n    }\n\n    init(attributeId, metadataName, value) {\n        checkMethod('AttributeMetadataChangedCommand.init()');\n        checkParam(attributeId, 'attributeId');\n        checkParam(metadataName, 'metadataName');\n\n        this.attributeId = attributeId;\n        this.metadataName = metadataName;\n        this.value = value;\n    }\n}","import {CALL_ACTION_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../../utils';\n\nexport default class CallActionCommand {\n    \n    constructor() {\n        this.id = CALL_ACTION_COMMAND_ID;\n    }\n\n    init(controllerid, actionName, params) {\n        checkMethod('CreateControllerCommand.init()');\n        checkParam(controllerid, 'controllerid');\n        checkParam(actionName, 'actionName');\n\n        this.controllerid = controllerid;\n        this.actionName = actionName;\n        this.params = params;\n    }\n\n}","import {CHANGE_ATTRIBUTE_METADATA_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../../utils';\n\nexport default class ChangeAttributeMetadataCommand {\n\n    constructor() {\n        this.id = CHANGE_ATTRIBUTE_METADATA_COMMAND_ID;\n    }\n\n    init(attributeId, metadataName, value) {\n        checkMethod('ChangeAttributeMetadataCommand.init()');\n        checkParam(attributeId, 'attributeId');\n        checkParam(metadataName, 'metadataName');\n\n        this.attributeId = attributeId;\n        this.metadataName = metadataName;\n        this.value = value;\n    }\n}","import {CREATE_CONTEXT_COMMAND_ID} from '../commandConstants';\n\nexport default class CreateContextCommand {\n\n    constructor() {\n        this.id = CREATE_CONTEXT_COMMAND_ID;\n    }\n\n}","import {CREATE_CONTROLLER_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../../utils';\n\nexport default class CreateControllerCommand {\n\n    constructor() {\n        this.id = CREATE_CONTROLLER_COMMAND_ID;\n    }\n\n    init(controllerName, parentControllerId) {\n        checkMethod('CreateControllerCommand.init()');\n        checkParam(controllerName, 'controllerName');\n\n        this.controllerName = controllerName;\n        this.parentControllerId = parentControllerId;\n    }\n\n}","import {CREATE_PRESENTATION_MODEL_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../../utils';\n\nexport default class CreatePresentationModelCommand {\n\n    constructor() {\n        this.id = CREATE_PRESENTATION_MODEL_COMMAND_ID;\n    }\n\n    init(presentationModel) {\n        checkMethod('CreatePresentationModelCommand.init()');\n        checkParam(presentationModel, 'presentationModel');\n\n        this.attributes = [];\n        this.clientSideOnly = false;\n        this.pmId = presentationModel.id;\n        this.pmType = presentationModel.presentationModelType;\n        var command = this;\n        presentationModel.getAttributes().forEach(function (attr) {\n            command.attributes.push({\n                propertyName: attr.propertyName,\n                id: attr.id,\n                value: attr.getValue()\n            });\n        });\n    }\n}","import {DELETE_PRESENTATION_MODEL_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../../utils';\n\nexport default class DeletePresentationModelCommand {\n\n    constructor() {\n        this.id = DELETE_PRESENTATION_MODEL_COMMAND_ID;\n    }\n\n    init(pmId) {\n        checkMethod('DeletePresentationModelCommand.init()');\n        checkParam(pmId, 'pmId');\n\n        this.pmId = pmId;\n    }\n}\n","import {DESTROY_CONTEXT_COMMAND_ID} from '../commandConstants';\n\nexport default class DestroyContextCommand {\n\n    constructor() {\n        this.id = DESTROY_CONTEXT_COMMAND_ID;\n    }\n\n}","import {DESTROY_CONTROLLER_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../../utils';\n\nexport default class DestroyControllerCommand {\n\n    constructor() {\n        this.id = DESTROY_CONTROLLER_COMMAND_ID;\n    }\n\n    init(controllerId) {\n        checkMethod('DestroyControllerCommand.init()');\n        checkParam(controllerId, 'controllerId');\n\n        this.controllerId = controllerId;\n    }\n\n}","import {INTERRUPT_LONG_POLL_COMMAND_ID} from '../commandConstants'\n\nexport default class InterruptLongPollCommand {\n\n    constructor() {\n        this.id = INTERRUPT_LONG_POLL_COMMAND_ID;\n    }\n}","import {PRESENTATION_MODEL_DELETED_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../../utils';\n\nexport default class PresentationModelDeletedCommand {\n\n    constructor() {\n        this.id = PRESENTATION_MODEL_DELETED_COMMAND_ID;\n    }\n\n    init(pmId) {\n        checkMethod('PresentationModelDeletedCommand.init()');\n        checkParam(pmId, 'pmId');\n\n        this.pmId = pmId;\n    }\n}","import {START_LONG_POLL_COMMAND_ID} from '../commandConstants'\n\nexport default class StartLongPollCommand {\n\n    constructor() {\n        this.id = START_LONG_POLL_COMMAND_ID;\n    }\n}\n","export default class CodecError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}","import {exists, checkMethod, checkParam} from '../../utils';\nimport {JS_STRING_TYPE} from '../constants';\nimport {\n    CREATE_PRESENTATION_MODEL_COMMAND_ID,\n    VALUE_CHANGED_COMMAND_ID,\n    ATTRIBUTE_METADATA_CHANGED_COMMAND_ID,\n    CALL_ACTION_COMMAND_ID,\n    CHANGE_ATTRIBUTE_METADATA_COMMAND_ID,\n    CREATE_CONTEXT_COMMAND_ID,\n    CREATE_CONTROLLER_COMMAND_ID,\n    DELETE_PRESENTATION_MODEL_COMMAND_ID,\n    DESTROY_CONTEXT_COMMAND_ID,\n    DESTROY_CONTROLLER_COMMAND_ID,\n    INTERRUPT_LONG_POLL_COMMAND_ID,\n    PRESENTATION_MODEL_DELETED_COMMAND_ID,\n    START_LONG_POLL_COMMAND_ID\n} from './commandConstants';\nimport {ID, PM_ID, PM_TYPE, PM_ATTRIBUTES, NAME, ATTRIBUTE_ID, VALUE, CONTROLLER_ID, PARAMS} from './commandConstants';\nimport ValueChangedCommand from './impl/valueChangedCommand';\nimport AttributeMetadataChangedCommand from './impl/attributeMetadataChangedCommand';\nimport CallActionCommand from './impl/callActionCommand';\nimport ChangeAttributeMetadataCommand from './impl/changeAttributeMetadataCommand';\nimport CreateContextCommand from './impl/createContextCommand';\nimport CreateControllerCommand from './impl/createControllerCommand';\nimport CreatePresentationModelCommand from './impl/createPresentationModelCommand';\nimport DeletePresentationModelCommand from './impl/deletePresentationModelCommand';\nimport DestroyContextCommand from './impl/destroyContextCommand';\nimport DestroyControllerCommand from './impl/destroyControllerCommand';\nimport InterruptLongPollCommand from './impl/interruptLongPollCommand';\nimport PresentationModelDeletedCommand from './impl/presentationModelDeletedCommand';\nimport StartLongPollCommand from './impl/startLongPollCommand';\nimport CodecError from './codecError';\n\n\nexport default class Codec {\n\n    static _encodeAttributeMetadataChangedCommand(command) {\n        checkMethod(\"Codec.encodeAttributeMetadataChangedCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.attributeId, \"command.attributeId\");\n        checkParam(command.metadataName, \"command.metadataName\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = ATTRIBUTE_METADATA_CHANGED_COMMAND_ID;\n        jsonCommand[ATTRIBUTE_ID] = command.attributeId;\n        jsonCommand[NAME] = command.metadataName;\n        jsonCommand[VALUE] = command.value;\n        return jsonCommand;\n    }\n\n    static _decodeAttributeMetadataChangedCommand(jsonCommand) {\n        checkMethod(\"Codec.decodeAttributeMetadataChangedCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[ATTRIBUTE_ID], \"jsonCommand[ATTRIBUTE_ID]\");\n        checkParam(jsonCommand[NAME], \"jsonCommand[NAME]\");\n\n        let command = new AttributeMetadataChangedCommand();\n        command.attributeId = jsonCommand[ATTRIBUTE_ID];\n        command.metadataName = jsonCommand[NAME];\n        command.value = jsonCommand[VALUE];\n        return command;\n    }\n\n    static _encodeCallActionCommand(command) {\n        checkMethod(\"Codec.encodeCallActionCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.controllerid, \"command.controllerid\");\n        checkParam(command.actionName, \"command.actionName\");\n        checkParam(command.params, \"command.params\");\n\n\n        let jsonCommand = {};\n        jsonCommand[ID] = CALL_ACTION_COMMAND_ID;\n        jsonCommand[CONTROLLER_ID] = command.controllerid;\n        jsonCommand[NAME] = command.actionName;\n        jsonCommand[PARAMS] = command.params.map((param) => {\n            let result = {};\n            result[NAME] = param.name;\n            if (exists(param.value)) {\n                result[VALUE] = param.value;\n            }\n            return result;\n        });\n        return jsonCommand;\n    }\n\n    static _decodeCallActionCommand(jsonCommand) {\n        checkMethod(\"Codec.decodeCallActionCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[CONTROLLER_ID], \"jsonCommand[CONTROLLER_ID]\");\n        checkParam(jsonCommand[NAME], \"jsonCommand[NAME]\");\n        checkParam(jsonCommand[PARAMS], \"jsonCommand[PARAMS]\");\n\n        let command = new CallActionCommand();\n        command.controllerid = jsonCommand[CONTROLLER_ID];\n        command.actionName = jsonCommand[NAME];\n        //TODO: Für die Params sollten wir eine Klasse bereitstellen\n        command.params = jsonCommand[PARAMS].map((param) => {\n            return {\n                'name': param[NAME],\n                'value': exists(param[VALUE]) ? param[VALUE] : null\n            };\n        });\n        return command;\n    }\n\n    static _encodeChangeAttributeMetadataCommand(command) {\n        checkMethod(\"Codec.encodeChangeAttributeMetadataCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.attributeId, \"command.attributeId\");\n        checkParam(command.metadataName, \"command.metadataName\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = CHANGE_ATTRIBUTE_METADATA_COMMAND_ID;\n        jsonCommand[ATTRIBUTE_ID] = command.attributeId;\n        jsonCommand[NAME] = command.metadataName;\n        jsonCommand[VALUE] = command.value;\n        return jsonCommand;\n    }\n\n    static _decodeChangeAttributeMetadataCommand(jsonCommand) {\n        checkMethod(\"Codec.decodeChangeAttributeMetadataCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[ATTRIBUTE_ID], \"jsonCommand[ATTRIBUTE_ID]\");\n        checkParam(jsonCommand[NAME], \"jsonCommand[NAME]\");\n\n        let command = new ChangeAttributeMetadataCommand();\n        command.attributeId = jsonCommand[ATTRIBUTE_ID];\n        command.metadataName = jsonCommand[NAME];\n        command.value = jsonCommand[VALUE];\n        return command;\n    }\n\n    static _encodeCreateContextCommand(command) {\n        checkMethod(\"Codec.encodeCreateContextCommand\");\n        checkParam(command, \"command\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = CREATE_CONTEXT_COMMAND_ID;\n        return jsonCommand;\n    }\n\n    static _decodeCreateContextCommand(jsonCommand) {\n        checkMethod(\"Codec.decodeCreateContextCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n\n        let command = new CreateContextCommand();\n        return command;\n    }\n\n    static _encodeCreateControllerCommand(command) {\n        checkMethod(\"Codec._encodeCreateControllerCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.controllerName, \"command.controllerName\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = CREATE_CONTROLLER_COMMAND_ID;\n        jsonCommand[NAME] = command.controllerName;\n        jsonCommand[CONTROLLER_ID] = command.parentControllerId;\n        return jsonCommand;\n    }\n\n    static _decodeCreateControllerCommand(jsonCommand) {\n        checkMethod(\"Codec._decodeCreateControllerCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[NAME], \"jsonCommand[NAME]\");\n        checkParam(jsonCommand[CONTROLLER_ID], \"jsonCommand[CONTROLLER_ID]\");\n\n        let command = new CreateControllerCommand();\n        command.controllerName = jsonCommand[NAME];\n        command.parentControllerId = jsonCommand[CONTROLLER_ID];\n        return command;\n    }\n\n    static _encodeCreatePresentationModelCommand(command) {\n        checkMethod(\"Codec.encodeCreatePresentationModelCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.pmId, \"command.pmId\");\n        checkParam(command.pmType, \"command.pmType\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = CREATE_PRESENTATION_MODEL_COMMAND_ID;\n        jsonCommand[PM_ID] = command.pmId;\n        jsonCommand[PM_TYPE] = command.pmType;\n        jsonCommand[PM_ATTRIBUTES] = command.attributes.map((attribute) => {\n            let result = {};\n            result[NAME] = attribute.propertyName;\n            result[ATTRIBUTE_ID] = attribute.id;\n            if (exists(attribute.value)) {\n                result[VALUE] = attribute.value;\n            }\n            return result;\n        });\n        return jsonCommand;\n    }\n\n    static _decodeCreatePresentationModelCommand(jsonCommand) {\n        checkMethod(\"Codec.decodeCreatePresentationModelCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[PM_ID], \"jsonCommand[PM_ID]\");\n        checkParam(jsonCommand[PM_TYPE], \"jsonCommand[PM_TYPE]\");\n\n        let command = new CreatePresentationModelCommand();\n        command.pmId = jsonCommand[PM_ID];\n        command.pmType = jsonCommand[PM_TYPE];\n\n        //TODO: Für die Attribute sollten wir eine Klasse bereitstellen\n        command.attributes = jsonCommand[PM_ATTRIBUTES].map((attribute) => {\n            return {\n                'propertyName': attribute[NAME],\n                'id': attribute[ATTRIBUTE_ID],\n                'value': exists(attribute[VALUE]) ? attribute[VALUE] : null\n            };\n        });\n        return command;\n    }\n\n    static _encodeDeletePresentationModelCommand(command) {\n        checkMethod(\"Codec._encodeDeletePresentationModelCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.pmId, \"command.pmId\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = DELETE_PRESENTATION_MODEL_COMMAND_ID;\n        jsonCommand[PM_ID] = command.pmId;\n        return jsonCommand;\n    }\n\n    static _decodeDeletePresentationModelCommand(jsonCommand) {\n        checkMethod(\"Codec._decodeDeletePresentationModelCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[PM_ID], \"jsonCommand[PM_ID]\");\n\n\n        let command = new DeletePresentationModelCommand();\n        command.pmId = jsonCommand[PM_ID];\n        return command;\n    }\n\n    static _encodeDestroyContextCommand(command) {\n        checkMethod(\"Codec._encodeDestroyContextCommand\");\n        checkParam(command, \"command\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = DESTROY_CONTEXT_COMMAND_ID;\n        return jsonCommand;\n    }\n\n    static _decodeDestroyContextCommand(jsonCommand) {\n        checkMethod(\"Codec._decodeDestroyContextCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n\n        let command = new DestroyContextCommand();\n        return command;\n    }\n\n    static _encodeDestroyControllerCommand(command) {\n        checkMethod(\"Codec._encodeDestroyControllerCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.controllerId, \"command.controllerId\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = DESTROY_CONTROLLER_COMMAND_ID;\n        jsonCommand[CONTROLLER_ID] = command.controllerId;\n        return jsonCommand;\n    }\n\n    static _decodeDestroyControllerCommand(jsonCommand) {\n        checkMethod(\"Codec._decodeDestroyControllerCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[CONTROLLER_ID], \"jsonCommand[CONTROLLER_ID]\");\n\n        let command = new DestroyControllerCommand();\n        command.controllerId = jsonCommand[CONTROLLER_ID];\n        return command;\n    }\n\n    static _encodeInterruptLongPollCommand(command) {\n        checkMethod(\"Codec._encodeInterruptLongPollCommand\");\n        checkParam(command, \"command\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = INTERRUPT_LONG_POLL_COMMAND_ID;\n        return jsonCommand;\n    }\n\n    static _decodeInterruptLongPollCommand(jsonCommand) {\n        checkMethod(\"Codec._decodeInterruptLongPollCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n\n        let command = new InterruptLongPollCommand();\n        return command;\n    }\n\n    static _encodePresentationModelDeletedCommand(command) {\n        checkMethod(\"Codec._encodePresentationModelDeletedCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.pmId, \"command.pmId\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = PRESENTATION_MODEL_DELETED_COMMAND_ID;\n        jsonCommand[PM_ID] = command.pmId;\n        return jsonCommand;\n    }\n\n    static _decodePresentationModelDeletedCommand(jsonCommand) {\n        checkMethod(\"Codec._decodePresentationModelDeletedCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[PM_ID], \"jsonCommand[PM_ID]\");\n\n        let command = new PresentationModelDeletedCommand();\n        command.pmId = jsonCommand[PM_ID];\n        return command;\n    }\n\n    static _encodeStartLongPollCommand(command) {\n        checkMethod(\"Codec._encodeStartLongPollCommand\");\n        checkParam(command, \"command\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = START_LONG_POLL_COMMAND_ID;\n        return jsonCommand;\n    }\n\n    static _decodeStartLongPollCommand(jsonCommand) {\n        checkMethod(\"Codec._decodeStartLongPollCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n\n        let command = new StartLongPollCommand();\n        return command;\n    }\n\n    static _encodeValueChangedCommand(command) {\n        checkMethod(\"Codec.encodeValueChangedCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.attributeId, \"command.attributeId\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = VALUE_CHANGED_COMMAND_ID;\n        jsonCommand[ATTRIBUTE_ID] = command.attributeId;\n        if (exists(command.newValue)) {\n            jsonCommand[VALUE] = command.newValue;\n        }\n        return jsonCommand;\n    }\n\n    static _decodeValueChangedCommand(jsonCommand) {\n        checkMethod(\"Codec.decodeValueChangedCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[ATTRIBUTE_ID], \"jsonCommand[ATTRIBUTE_ID]\");\n\n        let command = new ValueChangedCommand();\n        command.attributeId = jsonCommand[ATTRIBUTE_ID];\n        if (exists(jsonCommand[VALUE])) {\n            command.newValue = jsonCommand[VALUE];\n        } else {\n            command.newValue = null;\n        }\n        return command;\n    }\n\n    static encode(commands) {\n        checkMethod(\"Codec.encode\");\n        checkParam(commands, \"commands\");\n\n        let self = this;\n        return JSON.stringify(commands.map((command) => {\n            if (command.id === ATTRIBUTE_METADATA_CHANGED_COMMAND_ID) {\n                return self._encodeAttributeMetadataChangedCommand(command);\n            } else if (command.id === CALL_ACTION_COMMAND_ID) {\n                return self._encodeCallActionCommand(command);\n            } else if (command.id === CHANGE_ATTRIBUTE_METADATA_COMMAND_ID) {\n                return self._encodeChangeAttributeMetadataCommand(command);\n            } else if (command.id === CREATE_CONTEXT_COMMAND_ID) {\n                return self._encodeCreateContextCommand(command);\n            } else if (command.id === CREATE_CONTROLLER_COMMAND_ID) {\n                return self._encodeCreateControllerCommand(command);\n            } else if (command.id === CREATE_PRESENTATION_MODEL_COMMAND_ID) {\n                return self._encodeCreatePresentationModelCommand(command);\n            } else if (command.id === DELETE_PRESENTATION_MODEL_COMMAND_ID) {\n                return self._encodeDeletePresentationModelCommand(command);\n            } else if (command.id === DESTROY_CONTEXT_COMMAND_ID) {\n                return self._encodeDestroyContextCommand(command);\n            } else if (command.id === DESTROY_CONTROLLER_COMMAND_ID) {\n                return self._encodeDestroyControllerCommand(command);\n            } else if (command.id === INTERRUPT_LONG_POLL_COMMAND_ID) {\n                return self._encodeInterruptLongPollCommand(command);\n            } else if (command.id === PRESENTATION_MODEL_DELETED_COMMAND_ID) {\n                return self._encodePresentationModelDeletedCommand(command);\n            } else if (command.id === START_LONG_POLL_COMMAND_ID) {\n                return self._encodeStartLongPollCommand(command);\n            } else if (command.id === VALUE_CHANGED_COMMAND_ID) {\n                return self._encodeValueChangedCommand(command);\n            } else {\n                throw new CodecError('Command of type ' + command.id + ' can not be handled');\n            }\n        }));\n    }\n\n    static decode(transmitted) {\n        checkMethod(\"Codec.decode\");\n        checkParam(transmitted, \"transmitted\");\n\n        if (typeof transmitted === JS_STRING_TYPE) {\n            let self = this;\n            return JSON.parse(transmitted).map(function (command) {\n                if (command.id === ATTRIBUTE_METADATA_CHANGED_COMMAND_ID) {\n                    return self._decodeAttributeMetadataChangedCommand(command);\n                } else if (command.id === CALL_ACTION_COMMAND_ID) {\n                    return self._decodeCallActionCommand(command);\n                } else if (command.id === CHANGE_ATTRIBUTE_METADATA_COMMAND_ID) {\n                    return self._decodeChangeAttributeMetadataCommand(command);\n                } else if (command.id === CREATE_CONTEXT_COMMAND_ID) {\n                    return self._decodeCreateContextCommand(command);\n                } else if (command.id === CREATE_CONTROLLER_COMMAND_ID) {\n                    return self._decodeCreateControllerCommand(command);\n                } else if (command.id === CREATE_PRESENTATION_MODEL_COMMAND_ID) {\n                    return self._decodeCreatePresentationModelCommand(command);\n                } else if (command.id === DELETE_PRESENTATION_MODEL_COMMAND_ID) {\n                    return self._decodeDeletePresentationModelCommand(command);\n                } else if (command.id === DESTROY_CONTEXT_COMMAND_ID) {\n                    return self._decodeDestroyContextCommand(command);\n                } else if (command.id === DESTROY_CONTROLLER_COMMAND_ID) {\n                    return self._decodeDestroyControllerCommand(command);\n                } else if (command.id === INTERRUPT_LONG_POLL_COMMAND_ID) {\n                    return self._decodeInterruptLongPollCommand(command);\n                } else if (command.id === PRESENTATION_MODEL_DELETED_COMMAND_ID) {\n                    return self._decodePresentationModelDeletedCommand(command);\n                } else if (command.id === START_LONG_POLL_COMMAND_ID) {\n                    return self._decodeStartLongPollCommand(command);\n                } else if (command.id === VALUE_CHANGED_COMMAND_ID) {\n                    return self._decodeValueChangedCommand(command);\n                } else {\n                    throw new CodecError('Command of type ' + command.id + ' can not be handled');\n                }\n            });\n        } else {\n            throw new CodecError('Can not decode data that is not of type string');\n        }\n    }\n}","export default class EventBus {\n\n    constructor() {\n        this.eventHandlers = [];\n    }\n\n    onEvent(eventHandler) {\n        this.eventHandlers.push(eventHandler);\n    }\n\n    trigger(event) {\n        this.eventHandlers.forEach(handle => handle(event));\n    }\n}","import EventBus from './eventBus'\n\nvar presentationModelInstanceCount = 0; // todo dk: consider making this static in class\n\nexport default class ClientPresentationModel {\n    constructor(id, presentationModelType) {\n        this.id = id;\n        this.presentationModelType = presentationModelType;\n        this.attributes = [];\n        this.clientSideOnly = false;\n        this.dirty = false;\n        if (typeof id !== 'undefined' && id != null) {\n            this.id = id;\n        }\n        else {\n            this.id = (presentationModelInstanceCount++).toString();\n        }\n        this.invalidBus = new EventBus();\n        this.dirtyValueChangeBus = new EventBus();\n    }\n    // todo dk: align with Java version: move to ClientDolphin and auto-add to model store\n    /** a copy constructor for anything but IDs. Per default, copies are client side only, no automatic update applies. */\n    copy() {\n        var result = new ClientPresentationModel(null, this.presentationModelType);\n        result.clientSideOnly = true;\n        this.getAttributes().forEach((attribute) => {\n            var attributeCopy = attribute.copy();\n            result.addAttribute(attributeCopy);\n        });\n        return result;\n    }\n    //add array of attributes\n    addAttributes(attributes) {\n        if (!attributes || attributes.length < 1)\n            return;\n        attributes.forEach(attr => {\n            this.addAttribute(attr);\n        });\n    }\n    addAttribute(attribute) {\n        if (!attribute || (this.attributes.indexOf(attribute) > -1)) {\n            return;\n        }\n        if (this.findAttributeByPropertyName(attribute.propertyName)) {\n            throw new Error(\"There already is an attribute with property name: \" + attribute.propertyName\n                + \" in presentation model with id: \" + this.id);\n        }\n        if (attribute.getQualifier() && this.findAttributeByQualifier(attribute.getQualifier())) {\n            throw new Error(\"There already is an attribute with qualifier: \" + attribute.getQualifier()\n                + \" in presentation model with id: \" + this.id);\n        }\n        attribute.setPresentationModel(this);\n        this.attributes.push(attribute);\n        attribute.onValueChange(() => {\n            this.invalidBus.trigger({ source: this });\n        });\n    }\n    onInvalidated(handleInvalidate) {\n        this.invalidBus.onEvent(handleInvalidate);\n    }\n    /** returns a copy of the internal state */\n    getAttributes() {\n        return this.attributes.slice(0);\n    }\n    getAt(propertyName) {\n        return this.findAttributeByPropertyName(propertyName);\n    }\n    findAllAttributesByPropertyName(propertyName) {\n        var result = [];\n        if (!propertyName)\n            return null;\n        this.attributes.forEach((attribute) => {\n            if (attribute.propertyName == propertyName) {\n                result.push(attribute);\n            }\n        });\n        return result;\n    }\n    findAttributeByPropertyName(propertyName) {\n        if (!propertyName)\n            return null;\n        for (var i = 0; i < this.attributes.length; i++) {\n            if ((this.attributes[i].propertyName == propertyName)) {\n                return this.attributes[i];\n            }\n        }\n        return null;\n    }\n    findAttributeByQualifier(qualifier) {\n        if (!qualifier)\n            return null;\n        for (var i = 0; i < this.attributes.length; i++) {\n            if (this.attributes[i].getQualifier() == qualifier) {\n                return this.attributes[i];\n            }\n        }\n        return null;\n    }\n    findAttributeById(id) {\n        if (!id)\n            return null;\n        for (var i = 0; i < this.attributes.length; i++) {\n            if (this.attributes[i].id == id) {\n                return this.attributes[i];\n            }\n        }\n        return null;\n    }\n    syncWith(sourcePresentationModel) {\n        this.attributes.forEach((targetAttribute) => {\n            var sourceAttribute = sourcePresentationModel.getAt(targetAttribute.propertyName);\n            if (sourceAttribute) {\n                targetAttribute.syncWith(sourceAttribute);\n            }\n        });\n    }\n}\n","import BlindCommandBatcher from './commandBatcher';\nimport Codec from './commands/codec';\nimport ClientPresentationModel from './clientPresentationModel'\nimport { LoggerFactory } from '../logging';\n\nexport default class ClientConnector {\n\n    constructor(transmitter, clientDolphin, slackMS = 0, maxBatchSize = 50) {\n\n        this.commandQueue = [];\n        this.currentlySending = false;\n        this.pushEnabled = false;\n        this.waiting = false;\n        this.transmitter = transmitter;\n        this.clientDolphin = clientDolphin;\n        this.slackMS = slackMS;\n        this.codec = new Codec();\n        this.commandBatcher = new BlindCommandBatcher(true, maxBatchSize);\n    }\n\n    setCommandBatcher(newBatcher) {\n        this.commandBatcher = newBatcher;\n    }\n\n    setPushEnabled(enabled) {\n        this.pushEnabled = enabled;\n    }\n\n    setPushListener(newListener) {\n        this.pushListener = newListener;\n    }\n\n    setReleaseCommand(newCommand) {\n        this.releaseCommand = newCommand;\n    }\n\n    send(command, onFinished) {\n        this.commandQueue.push({ command: command, handler: onFinished });\n        if (this.currentlySending) {\n            this.release(); // there is not point in releasing if we do not send atm\n            return;\n        }\n        this.doSendNext();\n    }\n\n    doSendNext() {\n        if (this.commandQueue.length < 1) {\n            if (this.pushEnabled) {\n                this.enqueuePushCommand();\n            }\n            else {\n                this.currentlySending = false;\n                return;\n            }\n        }\n        this.currentlySending = true;\n        let cmdsAndHandlers = this.commandBatcher.batch(this.commandQueue);\n\n        if(cmdsAndHandlers.length > 0) {\n            let callback = cmdsAndHandlers[cmdsAndHandlers.length - 1].handler;\n            let commands = cmdsAndHandlers.map(cah => { return cah.command; });\n            this.transmitter.transmit(commands, (response) => {\n                let touchedPMs = [];\n                response.forEach((command) => {\n                    let touched = this.handle(command);\n                    if (touched)\n                        touchedPMs.push(touched);\n                });\n                if (callback) {\n                    callback.onFinished(touchedPMs); // todo: make them unique?\n                }\n                setTimeout(() => this.doSendNext(), this.slackMS);\n            }, (error) => {\n                callback.onError(error);\n            });\n        } else {\n            setTimeout(() => this.doSendNext(), this.slackMS);\n        }\n    }\n\n    handle(command) {\n        if (command.id === \"DeletePresentationModel\") {\n            return this.handleDeletePresentationModelCommand(command);\n        }\n        else if (command.id === \"CreatePresentationModel\") {\n            return this.handleCreatePresentationModelCommand(command);\n        }\n        else if (command.id === \"ValueChanged\") {\n            return this.handleValueChangedCommand(command);\n        }\n        else if (command.id === \"AttributeMetadataChanged\") {\n            return this.handleAttributeMetadataChangedCommand(command);\n        }\n        else {\n            ClientConnector.LOGGER.error(\"Cannot handle, unknown command \" + command);\n        }\n        return null;\n    }\n\n    handleDeletePresentationModelCommand(serverCommand) {\n        let model = this.clientDolphin.findPresentationModelById(serverCommand.pmId);\n        if (!model)\n            return null;\n        this.clientDolphin.getClientModelStore().deletePresentationModel(model, true);\n        return model;\n    }\n\n    handleCreatePresentationModelCommand(serverCommand) {\n        if (this.clientDolphin.getClientModelStore().containsPresentationModel(serverCommand.pmId)) {\n            throw new Error(\"There already is a presentation model with id \" + serverCommand.pmId + \"  known to the client.\");\n        }\n        let attributes = [];\n        serverCommand.attributes.forEach((attr) => {\n            let clientAttribute = this.clientDolphin.attribute(attr.propertyName, attr.qualifier, attr.value);\n            if (attr.id && attr.id.match(\".*S$\")) {\n                clientAttribute.id = attr.id;\n            }\n            attributes.push(clientAttribute);\n        });\n        let clientPm = new ClientPresentationModel(serverCommand.pmId, serverCommand.pmType);\n        clientPm.addAttributes(attributes);\n        if (serverCommand.clientSideOnly) {\n            clientPm.clientSideOnly = true;\n        }\n        this.clientDolphin.getClientModelStore().add(clientPm, false);\n        this.clientDolphin.updatePresentationModelQualifier(clientPm);\n        return clientPm;\n    }\n\n    handleValueChangedCommand(serverCommand) {\n        let clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n        if (!clientAttribute) {\n            ClientConnector.LOGGER.error(\"attribute with id \" + serverCommand.attributeId + \" not found, cannot update to new value \" + serverCommand.newValue);\n            return null;\n        }\n        if (clientAttribute.getValue() === serverCommand.newValue) {\n            return null;\n        }\n        clientAttribute.setValueFromServer(serverCommand.newValue);\n        return null;\n    }\n\n    handleAttributeMetadataChangedCommand(serverCommand) {\n        let clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n        if (!clientAttribute)\n            return null;\n        clientAttribute[serverCommand.metadataName] = serverCommand.value;\n        return null;\n    }\n\n    listen() {\n        if (!this.pushEnabled)\n            return;\n        if (this.waiting)\n            return;\n        // todo: how to issue a warning if no pushListener is set?\n        if (!this.currentlySending) {\n            this.doSendNext();\n        }\n    }\n\n    enqueuePushCommand() {\n        let me = this;\n        this.waiting = true;\n        this.commandQueue.push({\n            command: this.pushListener,\n            handler: {\n                onFinished: function () { me.waiting = false; },\n                onFinishedData: null\n            }\n        });\n    }\n\n    release() {\n        if (!this.waiting)\n            return;\n        this.waiting = false;\n        // todo: how to issue a warning if no releaseCommand is set?\n        this.transmitter.signal(this.releaseCommand);\n    }\n}\n\nClientConnector.LOGGER = LoggerFactory.getLogger('ClientConnector');","import EventBus from './eventBus';\nimport { LoggerFactory } from '../logging';\n\nexport default class ClientAttribute {\n\n    constructor(propertyName, qualifier, value) {\n\n        this.propertyName = propertyName;\n        this.id = \"\" + (ClientAttribute.clientAttributeInstanceCount++) + \"C\";\n        this.valueChangeBus = new EventBus();\n        this.qualifierChangeBus = new EventBus();\n        this.setValue(value);\n        this.setQualifier(qualifier);\n    }\n\n    copy() {\n        let result = new ClientAttribute(this.propertyName, this.getQualifier(), this.getValue());\n        return result;\n    }\n\n    setPresentationModel(presentationModel) {\n        if (this.presentationModel) {\n            throw new Error(\"You can not set a presentation model for an attribute that is already bound.\");\n        }\n        this.presentationModel = presentationModel;\n    }\n\n    getPresentationModel() {\n        return this.presentationModel;\n    }\n\n    getValue() {\n        return this.value;\n    }\n\n    setValueFromServer(newValue) {\n        let verifiedValue = ClientAttribute.checkValue(newValue);\n        if (this.value === verifiedValue)\n            return;\n        let oldValue = this.value;\n        this.value = verifiedValue;\n        this.valueChangeBus.trigger({ 'oldValue': oldValue, 'newValue': verifiedValue, 'sendToServer': false });\n    }\n\n    setValue(newValue) {\n        let verifiedValue = ClientAttribute.checkValue(newValue);\n        if (this.value === verifiedValue)\n            return;\n        let oldValue = this.value;\n        this.value = verifiedValue;\n        this.valueChangeBus.trigger({ 'oldValue': oldValue, 'newValue': verifiedValue, 'sendToServer': true });\n    }\n\n    setQualifier(newQualifier) {\n        if (this.qualifier === newQualifier)\n            return;\n        let oldQualifier = this.qualifier;\n        this.qualifier = newQualifier;\n        this.qualifierChangeBus.trigger({ 'oldValue': oldQualifier, 'newValue': newQualifier });\n        this.valueChangeBus.trigger({ \"oldValue\": this.value, \"newValue\": this.value, 'sendToServer': false });\n    }\n\n    getQualifier() {\n        return this.qualifier;\n    }\n\n    onValueChange(eventHandler) {\n        this.valueChangeBus.onEvent(eventHandler);\n        eventHandler({ \"oldValue\": this.value, \"newValue\": this.value, 'sendToServer': false });\n    }\n\n    onQualifierChange(eventHandler) {\n        this.qualifierChangeBus.onEvent(eventHandler);\n    }\n\n    syncWith(sourceAttribute) {\n        if (sourceAttribute) {\n            this.setQualifier(sourceAttribute.getQualifier()); // sequence is important\n            this.setValue(sourceAttribute.value);\n        }\n    }\n\n    static checkValue(value) {\n        if (value == null || typeof value === 'undefined') {\n            return null;\n        }\n        let result = value;\n        if (result instanceof String || result instanceof Boolean || result instanceof Number) {\n            result = value.valueOf();\n        }\n        if (result instanceof ClientAttribute) {\n            ClientAttribute.LOGGER.warn(\"An Attribute may not itself contain an attribute as a value. Assuming you forgot to call value.\");\n            result = this.checkValue(value.value);\n        }\n        let ok = false;\n        if (this.SUPPORTED_VALUE_TYPES.indexOf(typeof result) > -1 || result instanceof Date) {\n            ok = true;\n        }\n        if (!ok) {\n            throw new Error(\"Attribute values of this type are not allowed: \" + typeof value);\n        }\n        return result;\n    }\n\n}\n\nClientAttribute.LOGGER = LoggerFactory.getLogger('ClientAttribute');\nClientAttribute.SUPPORTED_VALUE_TYPES = [\"string\", \"number\", \"boolean\"];\nClientAttribute.clientAttributeInstanceCount = 0;\n","import ClientAttribute from './clientAttribute'\nimport ClientPresentationModel from './clientPresentationModel'\n\nexport default class ClientDolphin {\n\n    constructor() {\n    }\n\n    setClientConnector(clientConnector) {\n        this.clientConnector = clientConnector;\n    }\n\n    getClientConnector() {\n        return this.clientConnector;\n    }\n\n    send(command, onFinished) {\n        this.clientConnector.send(command, onFinished);\n    }\n\n    attribute(propertyName, qualifier, value) {\n        return new ClientAttribute(propertyName, qualifier, value);\n    }\n\n    presentationModel(id, type, ...attributes) {\n        const model = new ClientPresentationModel(id, type);\n        if (attributes && attributes.length > 0) {\n            attributes.forEach((attribute) => {\n                model.addAttribute(attribute);\n            });\n        }\n        this.getClientModelStore().add(model, true);\n        return model;\n    }\n\n    setClientModelStore(clientModelStore) {\n        this.clientModelStore = clientModelStore;\n    }\n\n    getClientModelStore() {\n        return this.clientModelStore;\n    }\n\n    listPresentationModelIds() {\n        return this.getClientModelStore().listPresentationModelIds();\n    }\n\n    listPresentationModels() {\n        return this.getClientModelStore().listPresentationModels();\n    }\n\n    findAllPresentationModelByType(presentationModelType) {\n        return this.getClientModelStore().findAllPresentationModelByType(presentationModelType);\n    }\n\n    getAt(id) {\n        return this.findPresentationModelById(id);\n    }\n\n    findPresentationModelById(id) {\n        return this.getClientModelStore().findPresentationModelById(id);\n    }\n\n    deletePresentationModel(modelToDelete) {\n        this.getClientModelStore().deletePresentationModel(modelToDelete, true);\n    }\n\n    updatePresentationModelQualifier(presentationModel) {\n        presentationModel.getAttributes().forEach(sourceAttribute => {\n            this.updateAttributeQualifier(sourceAttribute);\n        });\n    }\n\n    updateAttributeQualifier(sourceAttribute) {\n        if (!sourceAttribute.getQualifier())\n            return;\n        const attributes = this.getClientModelStore().findAllAttributesByQualifier(sourceAttribute.getQualifier());\n        attributes.forEach(targetAttribute => {\n            targetAttribute.setValue(sourceAttribute.getValue()); // should always have the same value\n        });\n    }\n\n    startPushListening(pushCommand, releaseCommand) {\n        this.clientConnector.setPushListener(pushCommand);\n        this.clientConnector.setReleaseCommand(releaseCommand);\n        this.clientConnector.setPushEnabled(true);\n\n        setTimeout(() => {\n            this.clientConnector.listen();\n        }, 0);\n    }\n\n    stopPushListening() {\n        this.clientConnector.setPushEnabled(false);\n    }\n}","\nexport default class Attribute {\n}\n\nAttribute.QUALIFIER_PROPERTY = \"qualifier\";\nAttribute.VALUE = \"value\";\n","import CreateContextCommand from './impl/createContextCommand';\nimport CreateControllerCommand from './impl/createControllerCommand';\nimport CallActionCommand from './impl/callActionCommand';\nimport DestroyControllerCommand from './impl/destroyControllerCommand';\nimport DestroyContextCommand from './impl/destroyContextCommand';\nimport StartLongPollCommand from './impl/startLongPollCommand';\nimport InterruptLongPollCommand from './impl/interruptLongPollCommand';\nimport CreatePresentationModelCommand from './impl/createPresentationModelCommand';\nimport DeletePresentationModelCommand from './impl/deletePresentationModelCommand';\nimport PresentationModelDeletedCommand from './impl/presentationModelDeletedCommand';\nimport ValueChangedCommand from './impl/valueChangedCommand';\nimport ChangeAttributeMetadataCommand from './impl/changeAttributeMetadataCommand';\nimport AttributeMetadataChangedCommand from './impl/attributeMetadataChangedCommand';\n\nexport default class CommandFactory {\n\n    static createCreateContextCommand() {\n        return new CreateContextCommand();\n    }\n\n    static createCreateControllerCommand(controllerName, parentControllerId) {\n        const command = new CreateControllerCommand();\n        command.init(controllerName, parentControllerId);\n        return command;\n    }\n\n    static createCallActionCommand(controllerid, actionName, params) {\n        const command = new CallActionCommand();\n        command.init(controllerid, actionName, params);\n        return command;\n    }\n\n    static createDestroyControllerCommand(controllerId) {\n        const command = new DestroyControllerCommand();\n        command.init(controllerId);\n        return command;\n    }\n\n    static createDestroyContextCommand() {\n        return new DestroyContextCommand();\n    }\n\n    static createStartLongPollCommand() {\n        return new StartLongPollCommand();\n    }\n\n    static createInterruptLongPollCommand() {\n        return new InterruptLongPollCommand();\n    }\n\n    static createCreatePresentationModelCommand(presentationModel) {\n        const command = new CreatePresentationModelCommand();\n        command.init(presentationModel);\n        return command;\n    }\n\n    static createDeletePresentationModelCommand(pmId) {\n        const command = new DeletePresentationModelCommand();\n        command.init(pmId);\n        return command;\n    }\n\n    static createPresentationModelDeletedCommand(pmId) {\n        let command = new PresentationModelDeletedCommand();\n        command.init(pmId);\n        return command;\n    }\n\n    static createValueChangedCommand(attributeId, newValue) {\n        let command = new ValueChangedCommand();\n        command.init(attributeId, newValue);\n        return command;\n    }\n\n    static createChangeAttributeMetadataCommand(attributeId, metadataName, value) {\n        let command = new ChangeAttributeMetadataCommand();\n        command.init(attributeId, metadataName, value);\n        return command;\n    }\n\n    static createAttributeMetadataChangedCommand(attributeId, metadataName, value) {\n        let command = new AttributeMetadataChangedCommand();\n        command.init(attributeId, metadataName, value);\n        return command;\n    }\n}","import Attribute from './attribute'\nimport EventBus from './eventBus'\nimport CommandFactory from './commands/commandFactory';\nimport {ADDED_TYPE, REMOVED_TYPE} from './constants'\nimport { LoggerFactory } from '../logging';\n\nexport default class ClientModelStore {\n\n    constructor(clientDolphin) {\n\n        this.clientDolphin = clientDolphin;\n        this.presentationModels = new Map();\n        this.presentationModelsPerType = new Map();\n        this.attributesPerId = new Map();\n        this.attributesPerQualifier = new Map();\n        this.modelStoreChangeBus = new EventBus();\n    }\n\n    getClientDolphin() {\n        return this.clientDolphin;\n    }\n\n    registerAttribute(attribute) {\n        this.addAttributeById(attribute);\n        if (attribute.getQualifier()) {\n            this.addAttributeByQualifier(attribute);\n        }\n        // whenever an attribute changes its value, the server needs to be notified\n        // and all other attributes with the same qualifier are given the same value\n        attribute.onValueChange((evt) => {\n            if(evt.newValue !== evt.oldValue && evt.sendToServer === true) {\n                const command = CommandFactory.createValueChangedCommand(attribute.id, evt.newValue);\n                this.clientDolphin.getClientConnector().send(command, null);\n            }\n\n            if (attribute.getQualifier()) {\n                let attrs = this.findAttributesByFilter((attr) => {\n                    return attr !== attribute && attr.getQualifier() === attribute.getQualifier();\n                });\n                attrs.forEach((attr) => {\n                    attr.setValue(attribute.getValue());\n                });\n            }\n\n        });\n        attribute.onQualifierChange((evt) => {\n            this.clientDolphin.getClientConnector().send(CommandFactory.createChangeAttributeMetadataCommand(attribute.id, Attribute.QUALIFIER_PROPERTY, evt.newValue), null);\n        });\n    }\n\n    add(model, sendToServer = true) {\n        if (!model) {\n            return false;\n        }\n        if (this.presentationModels.has(model.id)) {\n            ClientModelStore.LOGGER.error(\"There already is a PM with id \" + model.id);\n        }\n        let added = false;\n        if (!this.presentationModels.has(model.id)) {\n            this.presentationModels.set(model.id, model);\n            this.addPresentationModelByType(model);\n\n            if(sendToServer) {\n                let connector = this.clientDolphin.getClientConnector();\n                connector.send(CommandFactory.createCreatePresentationModelCommand(model), null);\n            }\n\n            model.getAttributes().forEach(attribute => {\n                this.registerAttribute(attribute);\n            });\n            this.modelStoreChangeBus.trigger({ 'eventType': ADDED_TYPE, 'clientPresentationModel': model });\n            added = true;\n        }\n        return added;\n    }\n\n    remove(model) {\n        if (!model) {\n            return false;\n        }\n        let removed = false;\n        if (this.presentationModels.has(model.id)) {\n            this.removePresentationModelByType(model);\n            this.presentationModels.delete(model.id);\n            model.getAttributes().forEach((attribute) => {\n                this.removeAttributeById(attribute);\n                if (attribute.getQualifier()) {\n                    this.removeAttributeByQualifier(attribute);\n                }\n            });\n            this.modelStoreChangeBus.trigger({ 'eventType': REMOVED_TYPE, 'clientPresentationModel': model });\n            removed = true;\n        }\n        return removed;\n    }\n\n    findAttributesByFilter(filter) {\n        let matches = [];\n        this.presentationModels.forEach((model) => {\n            model.getAttributes().forEach((attr) => {\n                if (filter(attr)) {\n                    matches.push(attr);\n                }\n            });\n        });\n        return matches;\n    }\n\n    addPresentationModelByType(model) {\n        if (!model) {\n            return;\n        }\n        let type = model.presentationModelType;\n        if (!type) {\n            return;\n        }\n        let presentationModels = this.presentationModelsPerType.get(type);\n        if (!presentationModels) {\n            presentationModels = [];\n            this.presentationModelsPerType.set(type, presentationModels);\n        }\n        if (!(presentationModels.indexOf(model) > -1)) {\n            presentationModels.push(model);\n        }\n    }\n\n    removePresentationModelByType(model) {\n        if (!model || !(model.presentationModelType)) {\n            return;\n        }\n        let presentationModels = this.presentationModelsPerType.get(model.presentationModelType);\n        if (!presentationModels) {\n            return;\n        }\n        if (presentationModels.length > -1) {\n            presentationModels.splice(presentationModels.indexOf(model), 1);\n        }\n        if (presentationModels.length === 0) {\n            this.presentationModelsPerType.delete(model.presentationModelType);\n        }\n    }\n\n    listPresentationModelIds() {\n        let result = [];\n        let iter = this.presentationModels.keys();\n        let next = iter.next();\n        while (!next.done) {\n            result.push(next.value);\n            next = iter.next();\n        }\n        return result;\n    }\n\n    listPresentationModels() {\n        let result = [];\n        let iter = this.presentationModels.values();\n        let next = iter.next();\n        while (!next.done) {\n            result.push(next.value);\n            next = iter.next();\n        }\n        return result;\n    }\n\n    findPresentationModelById(id) {\n        return this.presentationModels.get(id);\n    }\n\n    findAllPresentationModelByType(type) {\n        if (!type || !this.presentationModelsPerType.has(type)) {\n            return [];\n        }\n        return this.presentationModelsPerType.get(type).slice(0); // slice is used to clone the array\n    }\n\n    deletePresentationModel(model, notify) {\n        if (!model) {\n            return;\n        }\n        if (this.containsPresentationModel(model.id)) {\n            this.remove(model);\n            if (!notify || model.clientSideOnly) {\n                return;\n            }\n            this.clientDolphin.getClientConnector().send(CommandFactory.createPresentationModelDeletedCommand(model.id), null);\n        }\n    }\n\n    containsPresentationModel(id) {\n        return this.presentationModels.has(id);\n    }\n\n    addAttributeById(attribute) {\n        if (!attribute || this.attributesPerId.has(attribute.id)) {\n            return;\n        }\n        this.attributesPerId.set(attribute.id, attribute);\n    }\n\n    removeAttributeById(attribute) {\n        if (!attribute || !this.attributesPerId.has(attribute.id)) {\n            return;\n        }\n        this.attributesPerId.delete(attribute.id);\n    }\n\n    findAttributeById(id) {\n        return this.attributesPerId.get(id);\n    }\n\n    addAttributeByQualifier(attribute) {\n        if (!attribute || !attribute.getQualifier()) {\n            return;\n        }\n        let attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n        if (!attributes) {\n            attributes = [];\n            this.attributesPerQualifier.set(attribute.getQualifier(), attributes);\n        }\n        if (!(attributes.indexOf(attribute) > -1)) {\n            attributes.push(attribute);\n        }\n    }\n\n    removeAttributeByQualifier(attribute) {\n        if (!attribute || !attribute.getQualifier()) {\n            return;\n        }\n        let attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n        if (!attributes) {\n            return;\n        }\n        if (attributes.length > -1) {\n            attributes.splice(attributes.indexOf(attribute), 1);\n        }\n        if (attributes.length === 0) {\n            this.attributesPerQualifier.delete(attribute.getQualifier());\n        }\n    }\n\n    findAllAttributesByQualifier(qualifier) {\n        if (!qualifier || !this.attributesPerQualifier.has(qualifier)) {\n            return [];\n        }\n        return this.attributesPerQualifier.get(qualifier).slice(0); // slice is used to clone the array\n    }\n\n    onModelStoreChange(eventHandler) {\n        this.modelStoreChangeBus.onEvent(eventHandler);\n    }\n\n    onModelStoreChangeForType(presentationModelType, eventHandler) {\n        this.modelStoreChangeBus.onEvent(pmStoreEvent => {\n            if (pmStoreEvent.clientPresentationModel.presentationModelType == presentationModelType) {\n                eventHandler(pmStoreEvent);\n            }\n        });\n    }\n}\n\nClientModelStore.LOGGER = LoggerFactory.getLogger('ClientModelStore');\n\n","export default class NoTransmitter {\n\n    transmit(commands, onDone) {\n        // do nothing special\n        onDone([]);\n    }\n\n    signal() {\n        // do nothing\n    }\n\n    reset() {\n        // do nothing\n    }\n}","import ClientConnector from './clientConnector'\nimport ClientDolphin from './clientDolphin'\nimport ClientModelStore from './clientModelStore'\nimport NoTransmitter from './noTransmitter'\nimport { LoggerFactory } from '../logging';\n\n\nclass DolphinBuilder {\n\n    constructor() {\n        this.slackMS = 300;\n        this.maxBatchSize = 50;\n        this.transmitter = null;\n    }\n\n    withSlackMS(slackMS) {\n        this.slackMS = slackMS;\n        return this;\n    }\n\n    withMaxBatchSize(maxBatchSize) {\n        this.maxBatchSize = maxBatchSize;\n        return this;\n    }\n\n    withTransmitter(transmitter) {\n        this.transmitter = transmitter;\n        return this;\n    }\n\n    build() {\n        const clientDolphin = new ClientDolphin();\n        let transmitter;\n        if (this.transmitter) {\n            transmitter = this.transmitter;\n        } else {\n            transmitter = new NoTransmitter();\n        }\n        clientDolphin.setClientConnector(new ClientConnector(transmitter, clientDolphin, this.slackMS, this.maxBatchSize));\n        clientDolphin.setClientModelStore(new ClientModelStore(clientDolphin));\n        DolphinBuilder.LOGGER.debug(\"Remoting client initialized\", clientDolphin, transmitter);\n        return clientDolphin;\n    }\n}\n\nDolphinBuilder.LOGGER = LoggerFactory.getLogger('DolphinBuilder');\n\nconst dolphinBuilder = new DolphinBuilder();\n\nexport { dolphinBuilder }","import {exists, checkMethod, checkParam} from '../utils';\nimport CommandFactory from './commands/commandFactory';\nimport {ADDED_TYPE, REMOVED_TYPE} from './constants';\n\n\nconst DOLPHIN_BEAN = '@@@ R_BEAN @@@';\nconst ACTION_CALL_BEAN = '@@@ CONTROLLER_ACTION_CALL_BEAN @@@';\nconst HIGHLANDER_BEAN = '@@@ HIGHLANDER_BEAN @@@';\nconst DOLPHIN_LIST_SPLICE = '@R:LS@';\nconst SOURCE_SYSTEM = '@@@ SOURCE_SYSTEM @@@';\nconst SOURCE_SYSTEM_CLIENT = 'client';\nconst SOURCE_SYSTEM_SERVER = 'server';\n\nexport default class Connector{\n\n    constructor(url, dolphin, classRepository, config) {\n        checkMethod('Connector(url, dolphin, classRepository, config)');\n        checkParam(url, 'url');\n        checkParam(dolphin, 'dolphin');\n        checkParam(classRepository, 'classRepository');\n\n        let self = this;\n        this.dolphin = dolphin;\n        this.config = config;\n        this.classRepository = classRepository;\n        this.highlanderPMResolver = function() {};\n        this.highlanderPMPromise = new Promise((resolve) => {\n            self.highlanderPMResolver = resolve;\n        });\n\n        dolphin.getClientModelStore().onModelStoreChange((event) => {\n            let model = event.clientPresentationModel;\n            let sourceSystem = model.findAttributeByPropertyName(SOURCE_SYSTEM);\n            if (exists(sourceSystem) && sourceSystem.value === SOURCE_SYSTEM_SERVER) {\n                if (event.eventType === ADDED_TYPE) {\n                    self.onModelAdded(model);\n                } else if (event.eventType === REMOVED_TYPE) {\n                    self.onModelRemoved(model);\n                }\n            }\n        });\n    }\n    connect() {\n        let that = this;\n            that.dolphin.startPushListening(CommandFactory.createStartLongPollCommand(), CommandFactory.createInterruptLongPollCommand());\n    }\n\n    onModelAdded(model) {\n        checkMethod('Connector.onModelAdded(model)');\n        checkParam(model, 'model');\n\n        var type = model.presentationModelType;\n        switch (type) {\n            case ACTION_CALL_BEAN:\n                // ignore\n                break;\n            case DOLPHIN_BEAN:\n                this.classRepository.registerClass(model);\n                break;\n            case HIGHLANDER_BEAN:\n                this.highlanderPMResolver(model);\n                break;\n            case DOLPHIN_LIST_SPLICE:\n                this.classRepository.spliceListEntry(model);\n                this.dolphin.deletePresentationModel(model);\n                break;\n            default:\n                this.classRepository.load(model);\n                break;\n        }\n    }\n\n    onModelRemoved(model) {\n        checkMethod('Connector.onModelRemoved(model)');\n        checkParam(model, 'model');\n        let type = model.presentationModelType;\n        switch (type) {\n            case DOLPHIN_BEAN:\n                this.classRepository.unregisterClass(model);\n                break;\n            case DOLPHIN_LIST_SPLICE:\n                // do nothing\n                break;\n            default:\n                this.classRepository.unload(model);\n                break;\n        }\n    }\n\n    invoke(command) {\n        checkMethod('Connector.invoke(command)');\n        checkParam(command, 'command');\n\n        var dolphin = this.dolphin;\n        return new Promise((resolve, reject) => {\n            dolphin.send(command, {\n                onFinished: (params) => {\n                    resolve(params);\n                },\n                onError: (reason) => {\n                    reject(reason);\n                } \n            });\n        });\n    }\n\n    getHighlanderPM() {\n        return this.highlanderPMPromise;\n    }\n}\n\nexport { SOURCE_SYSTEM, SOURCE_SYSTEM_CLIENT, SOURCE_SYSTEM_SERVER, ACTION_CALL_BEAN };\n","import {exists, checkMethod, checkParam} from '../utils';\nimport { LoggerFactory } from '../logging';\n\nexport default class BeanManager {\n\n    constructor(classRepository) {\n        checkMethod('BeanManager(classRepository)');\n        checkParam(classRepository, 'classRepository');\n\n        this.classRepository = classRepository;\n        this.addedHandlers = new Map();\n        this.removedHandlers = new Map();\n        this.updatedHandlers = new Map();\n        this.arrayUpdatedHandlers = new Map();\n        this.allAddedHandlers = [];\n        this.allRemovedHandlers = [];\n        this.allUpdatedHandlers = [];\n        this.allArrayUpdatedHandlers = [];\n\n        this._handleBeanAdded = this._handleBeanAdded.bind(this);\n        this._handleBeanRemoved = this._handleBeanRemoved.bind(this);\n        this._handleBeanUpdate = this._handleBeanUpdate.bind(this);\n        this._handleArrayUpdate = this._handleArrayUpdate.bind(this);\n\n        this.classRepository.onBeanAdded(this._handleBeanAdded);\n        this.classRepository.onBeanRemoved(this._handleBeanRemoved);\n        this.classRepository.onBeanUpdate(this._handleBeanUpdate);\n        this.classRepository.onArrayUpdate(this._handleArrayUpdate);\n    }\n\n    _handleBeanAdded(type, bean) {\n        const handlerList = this.addedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach((handler) => {\n                try {\n                    handler(bean);\n                } catch (e) {\n                    BeanManager.LOGGER.error('An exception occurred while calling an onBeanAdded-handler for type', type, e);\n                }\n            });\n        }\n        this.allAddedHandlers.forEach((handler) => {\n            try {\n                handler(bean);\n            } catch (e) {\n                BeanManager.LOGGER.error('An exception occurred while calling a general onBeanAdded-handler', e);\n            }\n        });\n    }\n\n    _handleBeanRemoved(type, bean) {\n        const handlerList = this.removedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach((handler) => {\n                try {\n                    handler(bean);\n                } catch (e) {\n                    BeanManager.LOGGER.error('An exception occurred while calling an onBeanRemoved-handler for type', type, e);\n                }\n            });\n        }\n        this.allRemovedHandlers.forEach((handler) => {\n            try {\n                handler(bean);\n            } catch (e) {\n                BeanManager.LOGGER.error('An exception occurred while calling a general onBeanRemoved-handler', e);\n            }\n        });\n    }\n\n    _handleArrayUpdate(type, bean, propertyName, index, count, newElements) {\n        const handlerList = this.arrayUpdatedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach((handler) => {\n                try {\n                    handler(bean, propertyName, index, count, newElements);\n                } catch (e) {\n                    BeanManager.LOGGER.error('An exception occurred while calling an onArrayUpdate-handler for type', type, e);\n                }\n            });\n        }\n        this.allArrayUpdatedHandlers.forEach((handler) => {\n            try {\n                handler(bean, propertyName, index, count, newElements);\n            } catch (e) {\n                BeanManager.LOGGER.error('An exception occurred while calling a general onArrayUpdate-handler', e);\n            }\n        });\n    }\n\n    _handleBeanUpdate(type, bean, propertyName, newValue, oldValue) {\n        const handlerList = this.updatedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach((handler) => {\n                try {\n                    handler(bean, propertyName, newValue, oldValue);\n                } catch (e) {\n                    BeanManager.LOGGER.error('An exception occurred while calling an onBeanUpdate-handler for type', type, e);\n                }\n            });\n        }\n        this.allUpdatedHandlers.forEach((handler) => {\n            try {\n                handler(bean, propertyName, newValue, oldValue);\n            } catch (e) {\n                BeanManager.LOGGER.error('An exception occurred while calling a general onBeanUpdate-handler', e);\n            }\n        });\n    }\n\n\n    notifyBeanChange(bean, propertyName, newValue) {\n        checkMethod('BeanManager.notifyBeanChange(bean, propertyName, newValue)');\n        checkParam(bean, 'bean');\n        checkParam(propertyName, 'propertyName');\n\n        return this.classRepository.notifyBeanChange(bean, propertyName, newValue);\n    }\n\n\n    notifyArrayChange(bean, propertyName, index, count, removedElements) {\n        checkMethod('BeanManager.notifyArrayChange(bean, propertyName, index, count, removedElements)');\n        checkParam(bean, 'bean');\n        checkParam(propertyName, 'propertyName');\n        checkParam(index, 'index');\n        checkParam(count, 'count');\n        checkParam(removedElements, 'removedElements');\n\n        this.classRepository.notifyArrayChange(bean, propertyName, index, count, removedElements);\n    }\n\n\n    isManaged(bean) {\n        checkMethod('BeanManager.isManaged(bean)');\n        checkParam(bean, 'bean');\n\n        // TODO: Implement dolphin.isManaged() [DP-7]\n        throw new Error(\"Not implemented yet\");\n    }\n\n\n    create(type) {\n        checkMethod('BeanManager.create(type)');\n        checkParam(type, 'type');\n\n        // TODO: Implement dolphin.create() [DP-7]\n        throw new Error(\"Not implemented yet\");\n    }\n\n\n    add(type, bean) {\n        checkMethod('BeanManager.add(type, bean)');\n        checkParam(type, 'type');\n        checkParam(bean, 'bean');\n\n        // TODO: Implement dolphin.add() [DP-7]\n        throw new Error(\"Not implemented yet\");\n    }\n\n\n    addAll(type, collection) {\n        checkMethod('BeanManager.addAll(type, collection)');\n        checkParam(type, 'type');\n        checkParam(collection, 'collection');\n\n        // TODO: Implement dolphin.addAll() [DP-7]\n        throw new Error(\"Not implemented yet\");\n    }\n\n\n    remove(bean) {\n        checkMethod('BeanManager.remove(bean)');\n        checkParam(bean, 'bean');\n\n        // TODO: Implement dolphin.remove() [DP-7]\n        throw new Error(\"Not implemented yet\");\n    }\n\n\n    removeAll(collection) {\n        checkMethod('BeanManager.removeAll(collection)');\n        checkParam(collection, 'collection');\n\n        // TODO: Implement dolphin.removeAll() [DP-7]\n        throw new Error(\"Not implemented yet\");\n    }\n\n\n    removeIf(predicate) {\n        checkMethod('BeanManager.removeIf(predicate)');\n        checkParam(predicate, 'predicate');\n\n        // TODO: Implement dolphin.removeIf() [DP-7]\n        throw new Error(\"Not implemented yet\");\n    }\n\n\n    onAdded(type, eventHandler) {\n        let self = this;\n        if (!exists(eventHandler)) {\n            eventHandler = type;\n            checkMethod('BeanManager.onAdded(eventHandler)');\n            checkParam(eventHandler, 'eventHandler');\n\n            this.allAddedHandlers = this.allAddedHandlers.concat(eventHandler);\n            return {\n                unsubscribe: () => {\n                    self.allAddedHandlers = self.allAddedHandlers.filter((value) => {\n                        return value !== eventHandler;\n                    });\n                }\n            };\n        } else {\n            checkMethod('BeanManager.onAdded(type, eventHandler)');\n            checkParam(type, 'type');\n            checkParam(eventHandler, 'eventHandler');\n\n            let handlerList = this.addedHandlers.get(type);\n            if (!exists(handlerList)) {\n                handlerList = [];\n            }\n            this.addedHandlers.set(type, handlerList.concat(eventHandler));\n            return {\n                unsubscribe: () => {\n                    const handlerList = self.addedHandlers.get(type);\n                    if (exists(handlerList)) {                   \n                        self.addedHandlers.set(type, handlerList.filter((value) => {\n                            return value !== eventHandler;\n                        }));\n                    }\n                }\n            };\n        }\n    }\n\n\n    onRemoved(type, eventHandler) {\n        let self = this;\n        if (!exists(eventHandler)) {\n            eventHandler = type;\n            checkMethod('BeanManager.onRemoved(eventHandler)');\n            checkParam(eventHandler, 'eventHandler');\n\n            this.allRemovedHandlers = this.allRemovedHandlers.concat(eventHandler);\n            return {\n                unsubscribe: () => {\n                    self.allRemovedHandlers = self.allRemovedHandlers.filter((value) => {\n                        return value !== eventHandler;\n                    });\n                }\n            };\n        } else {\n            checkMethod('BeanManager.onRemoved(type, eventHandler)');\n            checkParam(type, 'type');\n            checkParam(eventHandler, 'eventHandler');\n\n            let handlerList = this.removedHandlers.get(type);\n            if (!exists(handlerList)) {\n                handlerList = [];\n            }\n            this.removedHandlers.set(type, handlerList.concat(eventHandler));\n            return {\n                unsubscribe: () => {\n                    const handlerList = self.removedHandlers.get(type);\n                    if (exists(handlerList)) {\n                        self.removedHandlers.set(type, handlerList.filter((value) => {\n                            return value !== eventHandler;\n                        }));\n                    }\n                }\n            };\n        }\n    }\n\n\n    onBeanUpdate(type, eventHandler) {\n        let self = this;\n        if (!exists(eventHandler)) {\n            eventHandler = type;\n            checkMethod('BeanManager.onBeanUpdate(eventHandler)');\n            checkParam(eventHandler, 'eventHandler');\n\n            this.allUpdatedHandlers = this.allUpdatedHandlers.concat(eventHandler);\n            return {\n                unsubscribe: () => {\n                    self.allUpdatedHandlers = self.allUpdatedHandlers.filter((value) => {\n                        return value !== eventHandler;\n                    });\n                }\n            };\n        } else {\n            checkMethod('BeanManager.onBeanUpdate(type, eventHandler)');\n            checkParam(type, 'type');\n            checkParam(eventHandler, 'eventHandler');\n\n            let handlerList = this.updatedHandlers.get(type);\n            if (!exists(handlerList)) {\n                handlerList = [];\n            }\n            this.updatedHandlers.set(type, handlerList.concat(eventHandler));\n            return {\n                unsubscribe: () => {\n                    let handlerList = self.updatedHandlers.get(type);\n                    if (exists(handlerList)) {\n                        self.updatedHandlers.set(type, handlerList.filter((value) => {\n                            return value !== eventHandler;\n                        }));\n                    }\n                }\n            };\n        }\n    }\n\n    onArrayUpdate(type, eventHandler) {\n        let self = this;\n        if (!exists(eventHandler)) {\n            eventHandler = type;\n            checkMethod('BeanManager.onArrayUpdate(eventHandler)');\n            checkParam(eventHandler, 'eventHandler');\n\n            this.allArrayUpdatedHandlers = this.allArrayUpdatedHandlers.concat(eventHandler);\n            return {\n                unsubscribe: () => {\n                    self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.filter((value) => {\n                        return value !== eventHandler;\n                    });\n                }\n            };\n        } else {\n            checkMethod('BeanManager.onArrayUpdate(type, eventHandler)');\n            checkParam(type, 'type');\n            checkParam(eventHandler, 'eventHandler');\n\n            let handlerList = this.arrayUpdatedHandlers.get(type);\n            if (!exists(handlerList)) {\n                handlerList = [];\n            }\n            this.arrayUpdatedHandlers.set(type, handlerList.concat(eventHandler));\n            return {\n                unsubscribe: () => {\n                    let handlerList = self.arrayUpdatedHandlers.get(type);\n                    if (exists(handlerList)) {\n                        self.arrayUpdatedHandlers.set(type, handlerList.filter((value) => {\n                            return value !== eventHandler;\n                        }));\n                    }\n                }\n            };\n        }\n    }\n}\n\nBeanManager.LOGGER = LoggerFactory.getLogger('BeanManager');\n","import * as consts from './constants';\nimport {exists, checkMethod, checkParam} from '../utils';\nimport { LoggerFactory } from '../logging';\n\nclass ClassRepository {\n\n    constructor(dolphin) {\n        checkMethod('ClassRepository(dolphin)');\n        checkParam(dolphin, 'dolphin');\n\n        this.dolphin = dolphin;\n        this.classes = new Map();\n        this.beanFromDolphin = new Map();\n        this.beanToDolphin = new Map();\n        this.classInfos = new Map();\n        this.beanAddedHandlers = [];\n        this.beanRemovedHandlers = [];\n        this.propertyUpdateHandlers = [];\n        this.arrayUpdateHandlers = [];\n        this.blocked = null;\n    }\n\n    sendListSplice(classRepository, modelId, propertyName, from, to, newElements) {\n        let dolphin = classRepository.dolphin;\n        let model = dolphin.findPresentationModelById(modelId);\n        if (exists(model)) {\n            let classInfo = classRepository.classes.get(model.presentationModelType);\n            let type = classInfo[propertyName];\n            if (exists(type)) {\n\n                let attributes = [\n                    dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n                    dolphin.attribute('source', null, modelId),\n                    dolphin.attribute('attribute', null, propertyName),\n                    dolphin.attribute('from', null, from),\n                    dolphin.attribute('to', null, to),\n                    dolphin.attribute('count', null, newElements.length)\n                ];\n                newElements.forEach(function (element, index) {\n                    attributes.push(dolphin.attribute(index.toString(), null, ClassRepository.toDolphin(classRepository, type, element)));\n                });\n                dolphin.presentationModel.apply(dolphin, [null, '@DP:LS@'].concat(attributes));\n            }\n        }\n    }\n\n    validateList(classRepository, type, bean, propertyName) {\n        let list = bean[propertyName];\n        if (!exists(list)) {\n            classRepository.propertyUpdateHandlers.forEach(function (handler) {\n                try {\n                    handler(type, bean, propertyName, [], undefined);\n                } catch (e) {\n                    ClassRepository.LOGGER.error('An exception occurred while calling an onBeanUpdate-handler', e);\n                }\n            });\n        }\n    }\n\n    block(bean, propertyName) {\n        if (exists(this.blocked)) {\n            throw new Error('Trying to create a block while another block exists');\n        }\n        this.blocked = {\n            bean: bean,\n            propertyName: propertyName\n        };\n    }\n\n    isBlocked(bean, propertyName) {\n        return exists(this.blocked) && this.blocked.bean === bean && this.blocked.propertyName === propertyName;\n    }\n\n    unblock() {\n        this.blocked = null;\n    }\n\n    notifyBeanChange(bean, propertyName, newValue) {\n        checkMethod('ClassRepository.notifyBeanChange(bean, propertyName, newValue)');\n        checkParam(bean, 'bean');\n        checkParam(propertyName, 'propertyName');\n\n        let modelId = this.beanToDolphin.get(bean);\n        if (exists(modelId)) {\n            let model = this.dolphin.findPresentationModelById(modelId);\n            if (exists(model)) {\n                let classInfo = this.classes.get(model.presentationModelType);\n                let type = classInfo[propertyName];\n                let attribute = model.findAttributeByPropertyName(propertyName);\n                if (exists(type) && exists(attribute)) {\n                    let oldValue = attribute.getValue();\n                    attribute.setValue(ClassRepository.toDolphin(this, type, newValue));\n                    return ClassRepository.fromDolphin(this, type, oldValue);\n                }\n            }\n        }\n    }\n\n    notifyArrayChange(bean, propertyName, index, count, removedElements) {\n        checkMethod('ClassRepository.notifyArrayChange(bean, propertyName, index, count, removedElements)');\n        checkParam(bean, 'bean');\n        checkParam(propertyName, 'propertyName');\n        checkParam(index, 'index');\n        checkParam(count, 'count');\n        checkParam(removedElements, 'removedElements');\n\n        if (this.isBlocked(bean, propertyName)) {\n            return;\n        }\n        let modelId = this.beanToDolphin.get(bean);\n        let array = bean[propertyName];\n        if (exists(modelId) && exists(array)) {\n            let removedElementsCount = Array.isArray(removedElements) ? removedElements.length : 0;\n            this.sendListSplice(this, modelId, propertyName, index, index + removedElementsCount, array.slice(index, index + count));\n        }\n    }\n\n    onBeanAdded(handler) {\n        checkMethod('ClassRepository.onBeanAdded(handler)');\n        checkParam(handler, 'handler');\n        this.beanAddedHandlers.push(handler);\n    }\n\n    onBeanRemoved(handler) {\n        checkMethod('ClassRepository.onBeanRemoved(handler)');\n        checkParam(handler, 'handler');\n        this.beanRemovedHandlers.push(handler);\n    }\n\n    onBeanUpdate(handler) {\n        checkMethod('ClassRepository.onBeanUpdate(handler)');\n        checkParam(handler, 'handler');\n        this.propertyUpdateHandlers.push(handler);\n    }\n\n    onArrayUpdate(handler) {\n        checkMethod('ClassRepository.onArrayUpdate(handler)');\n        checkParam(handler, 'handler');\n        this.arrayUpdateHandlers.push(handler);\n    }\n\n    registerClass(model) {\n        checkMethod('ClassRepository.registerClass(model)');\n        checkParam(model, 'model');\n\n        if (this.classes.has(model.id)) {\n            return;\n        }\n\n        let classInfo = {};\n        model.attributes.filter(function (attribute) {\n            return attribute.propertyName.search(/^@/) < 0;\n        }).forEach(function (attribute) {\n            classInfo[attribute.propertyName] = attribute.value;\n        });\n        this.classes.set(model.id, classInfo);\n    }\n\n    unregisterClass(model) {\n        checkMethod('ClassRepository.unregisterClass(model)');\n        checkParam(model, 'model');\n        this.classes['delete'](model.id);\n    }\n\n    load(model) {\n        checkMethod('ClassRepository.load(model)');\n        checkParam(model, 'model');\n\n        let self = this;\n        let classInfo = this.classes.get(model.presentationModelType);\n        let bean = {};\n        model.attributes.filter(function (attribute) {\n            return (attribute.propertyName.search(/^@/) < 0);\n        }).forEach(function (attribute) {\n            bean[attribute.propertyName] = null;\n            attribute.onValueChange(function (event) {\n                if (event.oldValue !== event.newValue) {\n                    let oldValue = ClassRepository.fromDolphin(self, classInfo[attribute.propertyName], event.oldValue);\n                    let newValue = ClassRepository.fromDolphin(self, classInfo[attribute.propertyName], event.newValue);\n                    self.propertyUpdateHandlers.forEach((handler) => {\n                        try {\n                            handler(model.presentationModelType, bean, attribute.propertyName, newValue, oldValue);\n                        } catch (e) {\n                            ClassRepository.LOGGER.error('An exception occurred while calling an onBeanUpdate-handler', e);\n                        }\n                    });\n                }\n            });\n        });\n        this.beanFromDolphin.set(model.id, bean);\n        this.beanToDolphin.set(bean, model.id);\n        this.classInfos.set(model.id, classInfo);\n        this.beanAddedHandlers.forEach((handler) => {\n            try {\n                handler(model.presentationModelType, bean);\n            } catch (e) {\n                ClassRepository.LOGGER.error('An exception occurred while calling an onBeanAdded-handler', e);\n            }\n        });\n        return bean;\n    }\n\n    unload(model) {\n        checkMethod('ClassRepository.unload(model)');\n        checkParam(model, 'model');\n\n        let bean = this.beanFromDolphin.get(model.id);\n        this.beanFromDolphin['delete'](model.id);\n        this.beanToDolphin['delete'](bean);\n        this.classInfos['delete'](model.id);\n        if (exists(bean)) {\n            this.beanRemovedHandlers.forEach((handler) => {\n                try {\n                    handler(model.presentationModelType, bean);\n                } catch (e) {\n                    ClassRepository.LOGGER.error('An exception occurred while calling an onBeanRemoved-handler', e);\n                }\n            });\n        }\n        return bean;\n    }\n\n    spliceListEntry(model) {\n        checkMethod('ClassRepository.spliceListEntry(model)');\n        checkParam(model, 'model');\n\n        let source = model.findAttributeByPropertyName('source');\n        let attribute = model.findAttributeByPropertyName('attribute');\n        let from = model.findAttributeByPropertyName('from');\n        let to = model.findAttributeByPropertyName('to');\n        let count = model.findAttributeByPropertyName('count');\n\n        if (exists(source) && exists(attribute) && exists(from) && exists(to) && exists(count)) {\n            let classInfo = this.classInfos.get(source.value);\n            let bean = this.beanFromDolphin.get(source.value);\n            if (exists(bean) && exists(classInfo)) {\n                let type = model.presentationModelType;\n                //var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n                this.validateList(this, type, bean, attribute.value);\n                let newElements = [],\n                    element = null;\n                for (let i = 0; i < count.value; i++) {\n                    element = model.findAttributeByPropertyName(i.toString());\n                    if (!exists(element)) {\n                        throw new Error(\"Invalid list modification update received\");\n                    }\n                    newElements.push(ClassRepository.fromDolphin(this, classInfo[attribute.value], element.value));\n                }\n                try {\n                    this.block(bean, attribute.value);\n                    this.arrayUpdateHandlers.forEach((handler) => {\n                        try {\n                            handler(type, bean, attribute.value, from.value, to.value - from.value, newElements);\n                        } catch (e) {\n                            ClassRepository.LOGGER.error('An exception occurred while calling an onArrayUpdate-handler', e);\n                        }\n                    });\n                } finally {\n                    this.unblock();\n                }\n            } else {\n                throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received\");\n        }\n    }\n\n    mapParamToDolphin(param) {\n        if (!exists(param)) {\n            return param;\n        }\n        let type = typeof param;\n        if (type === 'object') {\n            if (param instanceof Date) {\n                return param.toISOString();\n            } else {\n                let value = this.beanToDolphin.get(param);\n                if (exists(value)) {\n                    return value;\n                }\n                throw new TypeError(\"Only managed remoting beans can be used\");\n            }\n        }\n        if (type === 'string' || type === 'number' || type === 'boolean') {\n            return param;\n        }\n        throw new TypeError(\"Only managed remoting beans and primitive types can be used\");\n    }\n\n    mapDolphinToBean(value) {\n        return ClassRepository.fromDolphin(this, consts.REMOTING_BEAN, value);\n    }\n}\n\nClassRepository.fixType = function(type, value) {\n    switch (type) {\n        case consts.BYTE:\n        case consts.SHORT:\n        case consts.INT:\n        case consts.LONG:\n            return parseInt(value);\n        case consts.FLOAT:\n        case consts.DOUBLE:\n            return parseFloat(value);\n        case consts.BOOLEAN:\n            return 'true' === String(value).toLowerCase();\n        case consts.STRING:\n        case consts.ENUM:\n            return String(value);\n        default:\n            return value;\n    }\n};\n\nClassRepository.fromDolphin = function(classRepository, type, value) {\n    if (!exists(value)) {\n        return null;\n    }\n    switch (type) {\n        case consts.REMOTING_BEAN:\n            return classRepository.beanFromDolphin.get(String(value));\n        case consts.DATE:\n            return new Date(String(value));\n        case consts.CALENDAR:\n            return new Date(String(value));\n        case consts.LOCAL_DATE_FIELD_TYPE:\n            return new Date(String(value));\n        case consts.LOCAL_DATE_TIME_FIELD_TYPE:\n            return new Date(String(value));\n        case consts.ZONED_DATE_TIME_FIELD_TYPE:\n            return new Date(String(value));\n        default:\n            return ClassRepository.fixType(type, value);\n    }\n};\n\nClassRepository.toDolphin = function(classRepository, type, value) {\n    if (!exists(value)) {\n        return null;\n    }\n    switch (type) {\n        case consts.REMOTING_BEAN:\n            return classRepository.beanToDolphin.get(value);\n        case consts.DATE:\n            return value instanceof Date ? value.toISOString() : value;\n        case consts.CALENDAR:\n            return value instanceof Date ? value.toISOString() : value;\n        case consts.LOCAL_DATE_FIELD_TYPE:\n            return value instanceof Date ? value.toISOString() : value;\n        case consts.LOCAL_DATE_TIME_FIELD_TYPE:\n            return value instanceof Date ? value.toISOString() : value;\n        case consts.ZONED_DATE_TIME_FIELD_TYPE:\n            return value instanceof Date ? value.toISOString() : value;\n        default:\n            return ClassRepository.fixType(type, value);\n    }\n};\n\nClassRepository.LOGGER = LoggerFactory.getLogger('ClassRepository');\n\nexport default ClassRepository;\n","import {checkMethod, checkParam} from '../utils';\nimport { LoggerFactory } from '../logging';\n\nexport default class ControllerProxy {\n\n    constructor(controllerId, model, manager){\n        checkMethod('ControllerProxy(controllerId, model, manager)');\n        checkParam(controllerId, 'controllerId');\n        checkParam(model, 'model');\n        checkParam(manager, 'manager');\n\n        this.controllerId = controllerId;\n        this.model = model;\n        this.manager = manager;\n        this.destroyed = false;\n        this.onDestroyedHandlers = new Set();\n    }\n\n    getModel() {\n        return this.model;\n    }\n\n    getId() {\n        return this.controllerId;\n    }\n\n    invoke(name, params){\n        checkMethod('ControllerProxy.invoke(name, params)');\n        checkParam(name, 'name');\n\n        if (this.destroyed) {\n            throw new Error('The controller was already destroyed');\n        }\n        return this.manager.invokeAction(this.controllerId, name, params);\n    }\n\n    createController(name) {\n        return this.manager._createController(name, this.getId());\n    }\n\n    destroy(){\n        if (this.destroyed) {\n            throw new Error('The controller was already destroyed');\n        }\n        this.destroyed = true;\n        this.onDestroyedHandlers.forEach((handler) => {\n            try {\n                handler(this);\n            } catch(e) {\n                ControllerProxy.LOGGER.error('An exception occurred while calling an onDestroyed-handler', e);\n            }\n        }, this);\n        return this.manager.destroyController(this);\n    }\n\n    onDestroyed(handler){\n        checkMethod('ControllerProxy.onDestroyed(handler)');\n        checkParam(handler, 'handler');\n\n        let self = this;\n        this.onDestroyedHandlers.add(handler);\n        return {\n            unsubscribe: () => {\n                self.onDestroyedHandlers.delete(handler);\n            }\n        };\n    }\n}\n\nControllerProxy.LOGGER = LoggerFactory.getLogger('ControllerProxy');\n","import {exists, checkMethod, checkParam} from '../utils';\n\nimport ControllerProxy from './controllerProxy.js';\n\nimport CommandFactory from './commands/commandFactory.js';\n\n\nimport { SOURCE_SYSTEM } from './connector.js';\nimport { SOURCE_SYSTEM_CLIENT } from './connector.js';\nimport { ACTION_CALL_BEAN } from './connector.js';\n\nconst CONTROLLER_ID = 'controllerId';\nconst MODEL = 'model';\nconst ERROR_CODE = 'errorCode';\n\nexport default class ControllerManager {\n\n    constructor(dolphin, classRepository, connector) {\n        checkMethod('ControllerManager(dolphin, classRepository, connector)');\n        checkParam(dolphin, 'dolphin');\n        checkParam(classRepository, 'classRepository');\n        checkParam(connector, 'connector');\n\n        this.dolphin = dolphin;\n        this.classRepository = classRepository;\n        this.connector = connector;\n        this.controllers = new Set();\n    }\n\n    createController(name) {\n        return this._createController(name, null);\n    }\n\n    _createController(name, parentControllerId) {\n        checkMethod('ControllerManager.createController(name)');\n        checkParam(name, 'name');\n\n        let self = this;\n\n        return new Promise((resolve, reject) => {\n            self.connector.getHighlanderPM().then((highlanderPM) => {\n                const MSG_ERROR_CREATING_CONTROLLER = 'Error creating controller: ';\n\n                self.connector.invoke(CommandFactory.createCreateControllerCommand(name, parentControllerId)).then(() => {\n                    let controllerId;\n\n                    self.getValueWithRetry(\n                            () => highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).getValue(),\n                            'Could not get an controllerID from highlanderPM.'\n                        ).then((ctrlId) => {\n                            controllerId = ctrlId;\n                            return self.getValueWithRetry(\n                                () => highlanderPM.findAttributeByPropertyName(MODEL).getValue(),\n                                'Could not get an modelID from highlanderPM.'\n                            );\n                        })\n                        .then((modelId) => {\n                            return self.getValueWithRetry(\n                                () => self.classRepository.mapDolphinToBean(modelId),\n                                'Could not get an model from classRepository for ID: ' + modelId\n                            );\n                        })\n                        .then((model) => {\n                            try {\n                                const controller = new ControllerProxy(controllerId, model, self);\n                                self.controllers.add(controller);\n                                resolve(controller);\n                            } catch (e) {\n                                reject(MSG_ERROR_CREATING_CONTROLLER + e);\n                            }\n                        }).catch((error) => {\n                            reject(MSG_ERROR_CREATING_CONTROLLER + error);\n                        });\n                }).catch((error) => {\n                    reject(MSG_ERROR_CREATING_CONTROLLER + error);\n                });\n            });\n        });\n    }\n\n\n    getValueWithRetry(getValueCall, errorMessage) {\n        return new Promise((resolve, reject) => {\n            const RETRIES = 1000;\n            const RETRY_TIME = 5;\n            let i = 0;\n            const intervalID = setInterval(() => {\n                let value = getValueCall();\n                \n                if (!(typeof value !== 'undefined' && value !== null)) {\n                    i++;\n                    if (i >= RETRIES) {\n                        clearInterval(intervalID);\n                        reject(errorMessage + \" after \" + i + \" retries.\");\n                    }\n                } else {\n                    clearInterval(intervalID);\n                    resolve(value);\n                }\n            }, RETRY_TIME);\n        });\n    }\n\n    invokeAction(controllerId, actionName, params) {\n        checkMethod('ControllerManager.invokeAction(controllerId, actionName, params)');\n        checkParam(controllerId, 'controllerId');\n        checkParam(actionName, 'actionName');\n\n        let self = this;\n        return new Promise((resolve, reject) => {\n\n            let attributes = [\n                self.dolphin.attribute(SOURCE_SYSTEM, null, SOURCE_SYSTEM_CLIENT),\n                self.dolphin.attribute(ERROR_CODE)\n            ];\n\n            let pm = self.dolphin.presentationModel.apply(self.dolphin, [null, ACTION_CALL_BEAN].concat(attributes));\n\n            let actionParams = [];\n            if (exists(params)) {\n                for (var param in params) {\n                    if (params.hasOwnProperty(param)) {\n                        let value = self.classRepository.mapParamToDolphin(params[param]);\n                        actionParams.push({\n                            name: param,\n                            value: value\n                        });\n                    }\n                }\n            }\n\n            self.connector.invoke(CommandFactory.createCallActionCommand(controllerId, actionName, actionParams)).then(() => {\n                let isError = pm.findAttributeByPropertyName(ERROR_CODE).getValue();\n                if (isError) {\n                    reject(new Error(\"Server side ControllerAction \" + actionName + \" caused an error. Please see server log for details.\"));\n                } else {\n                    resolve();\n                }\n                self.dolphin.deletePresentationModel(pm);\n            }).catch(reject);\n        });\n    }\n\n    destroyController(controller) {\n        checkMethod('ControllerManager.destroyController(controller)');\n        checkParam(controller, 'controller');\n\n        let self = this;\n        return new Promise((resolve, reject) => {\n            self.connector.getHighlanderPM().then((highlanderPM) => {\n                self.controllers.delete(controller);\n                highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).setValue(controller.controllerId);\n                self.connector.invoke(CommandFactory.createDestroyControllerCommand(controller.getId())).then(resolve).catch(reject);\n            });\n        });\n    }\n\n    destroy() {\n        let controllersCopy = this.controllers;\n        let promises = [];\n        this.controllers = new Set();\n        controllersCopy.forEach((controller) => {\n            try {\n                promises.push(controller.destroy());\n            } catch (e) {\n                // ignore\n            }\n        });\n        return Promise.all(promises);\n    }\n}\n","import Emitter from 'emitter-component';\nimport CommandFactory from './commands/commandFactory';\nimport {exists, checkMethod, checkParam} from '../utils';\n\nexport default class ClientContext{\n\n    constructor(dolphin, beanManager, controllerManager, connector){\n        checkMethod('ClientContext(dolphin, beanManager, controllerManager, connector)');\n        checkParam(dolphin, 'dolphin');\n        checkParam(beanManager, 'beanManager');\n        checkParam(controllerManager, 'controllerManager');\n        checkParam(connector, 'connector');\n\n        this.dolphin = dolphin;\n        this.beanManager = beanManager;\n        this._controllerManager = controllerManager;\n        this._connector = connector;\n        this.connectionPromise = null;\n        this.isConnected = false;\n    }\n\n    connect(){\n        let self = this;\n        this.connectionPromise = new Promise((resolve, reject) => {\n            self._connector.connect();\n            self._connector.invoke(CommandFactory.createCreateContextCommand()).then(() => {\n                self.isConnected = true;\n                resolve();\n            }).catch(reject);\n        });\n        return this.connectionPromise;\n    }\n\n    onConnect(){\n        if(exists(this.connectionPromise)){\n            if(!this.isConnected){\n                return this.connectionPromise;\n            }else{\n                return new Promise((resolve) => {\n                    resolve();\n                });\n            }\n        }else{\n            return this.connect();\n        }\n    }\n\n    createController(name){\n        checkMethod('ClientContext.createController(name)');\n        checkParam(name, 'name');\n\n        return this._controllerManager.createController(name);\n    }\n\n    disconnect(){\n        let self = this;\n        this.dolphin.stopPushListening();\n        return new Promise((resolve) => {\n            self._controllerManager.destroy().then(() => {\n                self._connector.invoke(CommandFactory.createDestroyContextCommand());\n                self.dolphin = null;\n                self.beanManager = null;\n                self._controllerManager = null;\n                self._connector = null;\n                resolve();\n            });\n        });\n    }\n}\n\nEmitter(ClientContext.prototype);","export class DolphinRemotingError extends Error {\n  constructor(message = 'Remoting Error', detail) {\n    super(message);\n    this.detail = detail || undefined;\n  }\n}\n\nexport class DolphinSessionError extends Error {\n  constructor(message = 'Session Error') {\n    super(message);\n  }\n}\n\nexport class HttpResponseError extends Error {\n  constructor(message = 'Http Response Error') {\n    super(message);\n  }\n}\n\nexport class HttpNetworkError extends Error {\n    constructor(message = 'Http Network Error') {\n        super(message);\n    }\n}","import { LoggerFactory } from '../logging';\n\nexport default class RemotingErrorHandler {\n\n    onError(error) {\n        RemotingErrorHandler.LOGGER.error(error);\n    }\n\n}\n\nRemotingErrorHandler.LOGGER = LoggerFactory.getLogger('RemotingErrorHandler');","import Emitter from 'emitter-component';\n\n\nimport { exists } from '../utils';\nimport { DolphinRemotingError, DolphinSessionError } from './errors';\nimport Codec from './commands/codec';\nimport RemotingErrorHandler from './remotingErrorHandler';\nimport { LoggerFactory, LogLevel } from '../logging';\nimport {VALUE_CHANGED_COMMAND_ID, START_LONG_POLL_COMMAND_ID} from './commands/commandConstants';\n\nconst DOLPHIN_SESSION_TIMEOUT = 408;\n\nexport default class PlatformHttpTransmitter {\n\n    constructor(url, config, client) {\n        this.url = url;\n        this.config = config;\n        this.client = client;\n        this.headersInfo = exists(config) ? config.headersInfo : null;\n        this.failed_attempt = 0;\n\n        const connectionConfig =  this._connectionConfig();\n        this.maxRetry = exists(connectionConfig) && exists(connectionConfig.maxRetry)?connectionConfig.maxRetry: 3;\n        this.timeout = exists(connectionConfig) && exists(connectionConfig.timeout)?connectionConfig.timeout: 5000;\n    }\n\n    _connectionConfig() {\n        return exists(this.config) ? this.config.connection : null;\n    }\n\n    _handleError(reject, error) {\n        const connectionConfig =  this._connectionConfig();\n        let errorHandlers = exists(connectionConfig) && exists(connectionConfig.errorHandlers)?connectionConfig.errorHandlers: [new RemotingErrorHandler()];\n        errorHandlers.forEach(function(handler) {\n            handler.onError(error);\n        });\n        reject(error);\n    }\n\n    _send(commands) {\n        const self = this;\n        return new Promise((resolve, reject) => {\n            if (this.client) {\n                const encodedCommands = Codec.encode(commands);\n\n                if (PlatformHttpTransmitter.LOGGER.isLogLevelUseable(LogLevel.DEBUG) && !PlatformHttpTransmitter.LOGGER.isLogLevelUseable(LogLevel.TRACE)) {\n                    for (let i = 0; i < commands.length; i++) {\n                        let command = commands[i];\n                        if (command.id === VALUE_CHANGED_COMMAND_ID) {\n                            PlatformHttpTransmitter.LOGGER.debug('send', command, encodedCommands);\n                        }\n                    }\n                }\n\n                const useWorker = commands.length === 1 && commands[0].id === START_LONG_POLL_COMMAND_ID;\n                const httpClient = this.client.getService('HttpClient');\n                if (httpClient && self.failed_attempt <= self.maxRetry) {\n                    httpClient.post(self.url)\n                    .withHeadersInfo(this.headersInfo)\n                    .withContent(encodedCommands)\n                    .readString()\n                    .execute(useWorker)\n                    .then((response) => {\n                        resolve(response.content);\n                    })\n                    .catch((exception) => {\n                        const status = exception.getStatus();\n                        self.failed_attempt += 1;\n                        if (status === DOLPHIN_SESSION_TIMEOUT) {\n                            self._handleError(reject, new DolphinSessionError('PlatformHttpTransmitter: Session Timeout'));\n                        } else {\n                            self._handleError(reject, exception);\n                        }\n                    });\n                } else {\n                    //TODO handle failure\n                    PlatformHttpTransmitter.LOGGER.error('Cannot reach the sever');\n                }\n            } else {\n                PlatformHttpTransmitter.LOGGER.error('No Rico client found!');\n            }\n        });\n    }\n\n    transmit(commands, onDone, onError) {\n        this._send(commands)\n            .then(responseText => {\n                if (responseText.trim().length > 0) {\n                    try {\n                        const responseCommands = Codec.decode(responseText);\n                        onDone(responseCommands);\n                    } catch (err) {\n                        const errorMsg = 'PlatformHttpTransmitter: Parse error: (Incorrect response = ' + responseText + ')';\n                        this.emit('error', new DolphinRemotingError(errorMsg));\n                        onError(errorMsg);\n                    }\n                } else {\n                    const errorMsg = 'PlatformHttpTransmitter: Empty response';\n                    this.emit('error', new DolphinRemotingError(errorMsg));\n                    onError(errorMsg);\n                }\n            })\n            .catch(error => {\n                this.emit('error', error);\n                onError(error);\n            });\n    }\n\n    signal(command) {\n        this._send([command])\n            .catch(error => this.emit('error', error));\n    }\n}\n\nPlatformHttpTransmitter.LOGGER = LoggerFactory.getLogger('PlatformHttpTransmitter');\n\nEmitter(PlatformHttpTransmitter.prototype);\n","import { dolphinBuilder } from './dolphinBuilder';\nimport { checkMethod, checkParam } from '../utils';\nimport { LoggerFactory } from '../logging';\nimport Connector from './connector';\nimport BeanManager from './beanManager';\nimport ClassRepository from './classRepository';\nimport ControllerManager from './controllerManager';\nimport ClientContext from './clientContext';\nimport PlatformHttpTransmitter from './platformHttpTransmitter';\n\nclass ClientContextFactory {\n\n    constructor(client) {\n        this.client = client;\n        if (!client && ClientContextFactory.legecyClientSupport) {\n            ClientContextFactory.LOGGER.warn('Legecy support used.');\n            this.client = ClientContextFactory.legecyClientSupport;\n        }\n    }\n\n    create(url, config){\n        checkMethod('connect(url, config)');\n        checkParam(url, 'url');\n        ClientContextFactory.LOGGER.debug('Creating client context', url, config);\n\n        const transmitter = new PlatformHttpTransmitter(url, config, this.client);\n        transmitter.on('error', function (error) {\n            clientContext.emit('error', error);\n        });\n\n        const dolphin = dolphinBuilder\n            .withTransmitter(transmitter)\n            .withSlackMS(4)\n            .withMaxBatchSize(Number.MAX_SAFE_INTEGER)\n            .build();\n\n\n        const classRepository = new ClassRepository(dolphin);\n        const beanManager = new BeanManager(classRepository);\n        const connector = new Connector(url, dolphin, classRepository, config);\n        const controllerManager = new ControllerManager(dolphin, classRepository, connector);\n\n        const clientContext = new ClientContext(dolphin, beanManager, controllerManager, connector);\n\n        ClientContextFactory.LOGGER.debug('clientContext created with', clientContext);\n\n        return clientContext;\n    }\n}\n\nClientContextFactory.LOGGER = LoggerFactory.getLogger('ClientContextFactory');\nClientContextFactory.legecyClientSupport = false;\n\nlet createClientContext = (client) => new ClientContextFactory(client).create;\n\nexport { createClientContext, ClientContextFactory };","import { ClientContextFactory } from './clientContextFactory'\nimport { ServiceProvider } from '../platform/serviceProvider'\nimport { exists } from '../utils'\n\nfunction register(client) {\n    if (exists(client)) {\n        const clientContextFactoryProvider = new ServiceProvider(ClientContextFactory, 'ClientContextFactory', client);\n\n        client.registerServiceProvider(clientContextFactoryProvider);\n    }\n}\n\nexport { register };","import { checkMethod, checkParam, exists } from '../utils';\nimport { HTTP, RESPONSE_TYPE } from '../platform/constants'\n\nclass KeycloakConnection {\n\n    constructor() {\n    }\n\n    createDirectConnection(authEndpoint, realmName) {\n        checkMethod('createDirectConnection');\n        checkParam(authEndpoint, 'authEndpoint');\n        checkParam(realmName, 'realmName');\n\n        const httpRequest = new XMLHttpRequest();\n        httpRequest.open(HTTP.METHOD.POST, authEndpoint + '/auth/realms/' + realmName + '/protocol/openid-connect/token', true);\n        httpRequest.setRequestHeader(HTTP.HEADER_NAME.CONTENT_TYPE, HTTP.CONTENT_TYPE.APPLICATION_X_WWW_FORM_URLENCODED);\n        httpRequest.responseType = RESPONSE_TYPE.JSON;\n\n        return httpRequest;\n    }\n\n    createServerProxyConnection(authEndpoint, realmName) {\n        checkMethod('createServerProxyConnection');\n        checkParam(authEndpoint, 'authEndpoint');\n\n        const httpRequest = new XMLHttpRequest();\n        httpRequest.open(HTTP.METHOD.POST, authEndpoint, true);\n        httpRequest.setRequestHeader(HTTP.HEADER_NAME.CONTENT_TYPE, HTTP.CONTENT_TYPE.TEXT_PLAIN);\n        if (exists(realmName)) {\n            httpRequest.setRequestHeader(HTTP.HEADER_NAME.X_PLATFORM_SECURITY_REALM, realmName);\n        }\n        httpRequest.responseType = RESPONSE_TYPE.JSON;\n\n        return httpRequest;\n    }\n\n}\n\nexport { KeycloakConnection }","import { HTTP } from '../platform/constants'\nimport { exists } from '../utils';\nimport { LoggerFactory } from '../logging';\nimport { KeycloakConnection } from './keycloakConnection';\n\nclass KeycloakFunctions {\n\n    constructor() {\n        this.connection = new KeycloakConnection();\n    }\n\n    createLoginConnection(directConnection, authEndpoint, realmName, appName, user, password) {\n        let connection;\n        let content;\n\n        const encodedUser = encodeURIComponent(user);\n        const encodedPassword = encodeURIComponent(password);\n        const encodedAppName = encodeURIComponent(appName);\n\n        if (directConnection) {\n            if (exists(appName)) {\n                connection = this.connection.createDirectConnection(authEndpoint,realmName);\n                content = 'client_id=' + encodedAppName + '&username=' + encodedUser + '&password=' + encodedPassword + '&grant_type=password';\n            } else {\n                throw Error('No app name set!');\n            }\n        } else {\n            connection = this.connection.createServerProxyConnection(authEndpoint, realmName);\n            content = 'username=' + encodedUser + '&password=' + encodedPassword + '&grant_type=password';\n        }\n\n        return { connection, content };\n    }\n\n    createRefreshConnection(directConnection, authEndpoint, realmName, appName, refreshToken) {\n        let connection;\n        let content;\n\n        const encodedAppName = encodeURIComponent(appName);\n\n        if (directConnection) {\n            if (exists(appName)) {\n                connection = this.connection.createDirectConnection(authEndpoint, realmName);\n                content = 'grant_type=refresh_token&refresh_token=' + refreshToken + '&client_id=' + encodedAppName;\n            } else {\n                throw Error('No app name set!');\n            }\n        } else {\n            connection = this.connection.createServerProxyConnection(authEndpoint, realmName);\n            content = 'grant_type=refresh_token&refresh_token=' + refreshToken;\n        }\n\n        return { connection, content };\n    }\n\n    receiveToken(httpRequest, body) {\n        return new Promise((resolve, reject) => {\n            httpRequest.ontimeout = function (error) {\n                reject(error);\n            }\n\n            httpRequest.onerror = function (error) {\n                reject(error);\n            }\n\n            httpRequest.onreadystatechange = function () {\n                if (this.readyState === HTTP.XMLHTTPREQUEST_READYSTATE.DONE && this.status === HTTP.STATUS.OK) {\n                    resolve(this.response);\n                } else if (this.readyState === HTTP.XMLHTTPREQUEST_READYSTATE.DONE && this.status !== HTTP.STATUS.OK) {\n                    reject(this.status);\n                }\n            }\n            \n            KeycloakFunctions.LOGGER.trace('Receiving token');\n            httpRequest.send(body);\n        });\n    }\n\n    refreshToken(directConnection, authEndpoint, realmName, appName, refreshToken) {\n        const { connection, content } = this.createRefreshConnection(directConnection, authEndpoint, realmName, appName, refreshToken);\n        return this.receiveToken(connection, content);\n    }\n    \n}\n\nKeycloakFunctions.LOGGER = LoggerFactory.getLogger('KeycloakFunctions');\n\nexport { KeycloakFunctions }","import { checkMethod, checkParam, exists } from '../utils'\nimport { LoggerFactory } from '../logging'\nimport { HTTP } from '../platform/constants'\n\nclass SecurityHttpClientInterceptor {\n\n    constructor() {\n        this.token = null;\n        this.appName = null;\n        this.realm = null;\n    }\n\n    setToken(token) {\n        this.token = token;\n    }\n\n    setAppName(appName) {\n        this.appName = appName;\n    }\n\n    setRealm(realm) {\n        this.realm = realm;\n    }\n\n    handleRequest(httpRequest) {\n        checkMethod('handleRequest');\n        checkParam(httpRequest, 'httpRequest');\n\n        if (exists(this.token)) {\n            SecurityHttpClientInterceptor.LOGGER.trace('Using token', this.token);\n            httpRequest.setRequestHeader(HTTP.HEADER_NAME.AUTHORIZATION, 'Bearer ' + this.token);\n        }\n\n        if (exists(this.appName)) {\n            SecurityHttpClientInterceptor.LOGGER.trace('Using appName', this.appName);\n            httpRequest.setRequestHeader(HTTP.HEADER_NAME.X_PLATFORM_SECURITY_APPLICATION, this.appName);\n        }\n\n        if (exists(this.realm)) {\n            SecurityHttpClientInterceptor.LOGGER.trace('Using realm', this.realm);\n            httpRequest.setRequestHeader(HTTP.HEADER_NAME.X_PLATFORM_SECURITY_REALM, this.realm);\n        }\n\n        httpRequest.setRequestHeader(HTTP.HEADER_NAME.X_PLATFORM_SECURITY_BEARER_ONLY, 'true');\n        \n    }\n}\n\nSecurityHttpClientInterceptor.LOGGER = LoggerFactory.getLogger('SecurityHttpClientInterceptor');\n\nexport { SecurityHttpClientInterceptor };","import { LoggerFactory } from '../logging';\nimport { exists, checkMethod, checkParam } from '../utils';\nimport { KeycloakFunctions } from './keycloakFunctions';\nimport { SecurityHttpClientInterceptor } from './securityHttpClientInterceptor';\nimport { SECURITY } from '../platform/constants'\n\nclass KeycloakSecurity {\n\n    constructor() {\n        this.functions = new KeycloakFunctions();\n        this.interceptor = new SecurityHttpClientInterceptor();\n        this.intervall = null;\n\n        this.configuration = {\n            directConnection: false,\n            authEndpoint: SECURITY.AUTH_ENDPOINT,\n            appName: null,\n            realmName: null\n        }\n       \n    }\n\n    login(user, password, configuration) {\n        if (this.isAuthorized()) {\n            throw new Error('Already logged in!');\n        }\n\n        if (configuration) {\n            this.configuration.directConnection = configuration.directConnection || this.configuration.directConnection;\n            this.configuration.authEndpoint = configuration.authEndpoint || this.configuration.authEndpoint;\n            this.configuration.appName = configuration.appName || this.configuration.appName;\n            this.configuration.realmName = configuration.realmName || this.configuration.realmName;\n        }\n\n        const { directConnection, authEndpoint, appName, realmName } = this.configuration;\n\n        const { connection, content } = this.functions.createLoginConnection(directConnection, authEndpoint, realmName, appName, user, password);\n        const self = this;\n        return new Promise((resolve, reject) => {\n            KeycloakSecurity.LOGGER.debug('Receiving access token');\n            this.functions.receiveToken(connection, content)\n            .then((result) => {\n                if (result && result.access_token) {\n                    self.token = result;\n                    this.interceptor.setToken(result.access_token);\n                    this.interceptor.setRealm(realmName);\n                    this.interceptor.setAppName(appName);\n                    const expires =  result.expires_in || KeycloakSecurity.MIN_TOKEN_EXPIRES_RUN;\n                    const sleepTime = Math.max(KeycloakSecurity.MIN_TOKEN_EXPIRES_RUN, expires - KeycloakSecurity.TOKEN_EXPIRES_DELTA);\n                    self.intervall = setInterval(() => {\n                        KeycloakSecurity.LOGGER.debug('Refreshing access token');\n                        self.functions.refreshToken(directConnection, authEndpoint, realmName, appName, result.refresh_token).then((result) => {\n                            self.token = result;\n                            self.interceptor.setToken(result.access_token);\n                        });\n                    }, sleepTime);\n                    resolve(result.access_token);\n                } else {\n                    reject('No access token found');\n                }\n            })\n            .catch((error) => reject(error));\n        });\n    }\n\n    logout() {\n        const self = this;\n        KeycloakSecurity.LOGGER.debug('Logout');\n        return new Promise((resolve) => {\n            delete self.token;\n            self.interceptor.setToken(null);\n            if (exists(this.intervall)) {\n                clearInterval(this.intervall);\n                this.intervall = null;\n            }\n            resolve();\n        });\n    }\n\n    isAuthorized() {\n        return exists(this.token);\n    }\n\n    initServiceProvider(client) {\n        checkMethod('initServiceProvider');\n        checkParam(client, 'client');\n        client.getService('HttpClientInterceptor').addRequestInterceptor(this.interceptor);\n    }\n}\n\nKeycloakSecurity.TOKEN_EXPIRES_DELTA = 10000;\nKeycloakSecurity.MIN_TOKEN_EXPIRES_RUN = 30000;\n\nKeycloakSecurity.LOGGER = LoggerFactory.getLogger('KeycloakSecurity');\n\nexport { KeycloakSecurity };\n","\nimport { ServiceProvider } from '../platform/serviceProvider';\nimport { exists } from '../utils'\nimport { KeycloakSecurity } from './keycloakSecurity';\n\nfunction register(client) {\n    if (exists(client)) {\n        const securityProvider = new ServiceProvider(KeycloakSecurity, 'Security', client);\n        client.registerServiceProvider(securityProvider);\n    }\n}\n\nexport { register }","import { LoggerFactory, LogLevel } from './logging';\nimport { Client } from './platform/client';\nimport { ServiceProvider } from './platform/serviceProvider';\nimport { HTTP } from './platform/constants';\nimport { register as registerHttp } from './http';\nimport { register as registerClientScope } from './platform/clientScope';\nimport { register as registerRemotingScope } from './remoting'\nimport { register as registerSecurity } from './security'\n\nregisterHttp(Client);\nregisterClientScope(Client);\nregisterRemotingScope(Client);\nregisterSecurity(Client);\nClient.init();\n\nconst getService = Client.getService;\nconst hasService = Client.hasService;\nconst registerServiceProvider = Client.registerServiceProvider;\n\n/* eslint-disable */\nClient.LOGGER.info('Rico Version:' , RICO_VERSION);\n/* eslint-enable */\n\nexport { LoggerFactory, LogLevel, getService, hasService, registerServiceProvider, HTTP }\n\nif (window.Worker && window.Blob && window.URL && URL.createObjectURL) {\n    Client.LOGGER.debug('Creating Worker');\n    class HttpWorker {\n        constructor() {\n            /* eslint-disable */\n            this.blob = new Blob([RICO_WORKER], {type: \"application/javascript\"});\n            /* eslint-enable */\n        }\n\n        createWorker() {\n            return new Worker(URL.createObjectURL(this.blob));\n        }\n    }\n\n    const httpWorkerProvider = new ServiceProvider(HttpWorker, 'HttpWorker');\n    Client.registerServiceProvider(httpWorkerProvider);\n}\n\n/* \n * Provide dependencies as global dolphin object for backward compatibility.\n * The code below this comment is deprecated and should be removed in a feature version.\n */\nimport { createClientContext, ClientContextFactory } from './remoting/clientContextFactory'\n\nconst LOGGER = LoggerFactory.getLogger('Deprecated:');\nlet showWarning = true;\nfunction warn() {\n    if (showWarning) {\n        LOGGER.warn('Please do not use \"dolphin\" anymore, it may be removed in the next version! Use the new API instead!');\n        showWarning = false;\n    }\n}\n\nif (window) {\n    window.dolphin = { // TODO remove in next major release\n        get ClientContextFactory() {\n            warn();\n            ClientContextFactory.legecyClientSupport = Client;\n            return ClientContextFactory;\n        },\n        get createClientContext() {\n            warn();\n            return createClientContext(Client);\n        },\n        get LoggerFactory() {\n            warn();\n            return LoggerFactory;\n        },\n        get LogLevel() {\n            warn();\n            return LogLevel;\n        }\n    };\n}"],"sourceRoot":""}